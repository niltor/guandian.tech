[{"TitleEn":null,"ContentEn":"<p><em>This blog post was authored by Debbi Lyons, Senior Product Marketing Manager, Azure Marketing.</em></p>\r\n\r\n<p>Get inspired by our industry-leading keynote speakers on the Microsoft data platform at <strong>PASS Summit 2018</strong>! There has never been a more exciting time for data professionals and developers as more organizations turn to data-driven insights to stay ahead and prepare for the future. For those wanting to know more about Azure SQL Database and migrating your SQL Server databases without changing your apps, we&#39;ve got some great sessions for you.</p>\r\n\r\n<p>Azure SQL Database is the intelligent, fully managed relational cloud database service that provides the broadest SQL Server engine compatibility. Learn about managed instances to accelerate app development and simplify maintenance using the SQL tools you love to use.&nbsp;</p>\r\n\r\n<p>Azure Database for MySQL provides a fully managed, enterprise-ready community MySQL database as a service. The MySQL Community edition helps you easily lift and shift to the cloud, using languages and frameworks of your choice. Azure Database for MySQL enables popular open source frameworks and languages, and it features tight integration with Azure Web Apps.</p>\r\n\r\n<p>Below are three must attend sessions!</p>\r\n\r\n<h3>Introducing Azure SQL Database Hyperscale</h3>\r\n\r\n<p>In this session, we will talk about our newest offerings in Azure SQL Database that will provide more flexibility and scale for both Compute and Storage for your database workloads.</p>\r\n\r\n<p><strong>Date:</strong> November 7, 2018</p>\r\n\r\n<p><strong>Time</strong>: 10:15 AM - 11:30 AM</p>\r\n\r\n<p><strong>Speakers</strong>: Ajay Jagannathan, Kevin Farlee, Lindsay Allen, and Xiaochen Wu</p>\r\n\r\n<h3>Azure SQL DB Managed Instances - Built to Easily Modernize Application Data Layer</h3>\r\n\r\n<p>Managed Instances are the latest fully managed deployment model for Azure SQL Database that enables friction-free migration for SQL Server applications running on-premises. This is done by providing almost 100 percent surface area compatibility with SQL Server through supporting features such as cross-DB queries and transactions, CLR, SQL Agent, Transactional Replication, Change Data Capture, Service Broker, and more. Come and learn why Managed Instance is a great PaaS destination for all SQL Server workloads and how to start your cloud modernization at scale now, using Azure SQL Database Managed Instances.</p>\r\n\r\n<p><strong>Date</strong>: November 8, 2018</p>\r\n\r\n<p><strong>Time</strong>: 10:45 AM - 12:00 PM</p>\r\n\r\n<p><strong>Speaker</strong>: Borko Novakovic, Senior Program Manager, Microsoft</p>\r\n\r\n<h3>OSS Databases on Azure</h3>\r\n\r\n<p>Azure SQL Database is a much-loved database for developers. PostgreSQL is emerging and quickly gaining grounds among developers as well and was voted the most loved database by db engines for 2017. Azure now offers developers the choice of SQL, PostgreSQL, MySQL, and MariaDB, delivered as a fully managed service. Built on the same platform as Azure SQL Database, we are enabling database developers and DBAs a consistent managed service experience. Come learn how you can extend your SQL expertise to these new OSS database engines.</p>\r\n\r\n<p><strong>Date</strong>: November 9, 2018</p>\r\n\r\n<p><strong>Time</strong>: 9:30 AM - 10:45 AM</p>\r\n\r\n<p><strong>Speaker</strong>: Charles Christian, Principal Group Program Manager, Microsoft</p>\r\n\r\n<p>Check out the full schedule of <a href=\"https://www.pass.org/summit/2018/Learn/ConferenceSessions.aspx\" target=\"_blank\">Conference Sessions</a> to get a taste of what you won&rsquo;t want to miss at PASS Summit 2018.</p>\r\n","Link":"https://azure.microsoft.com/blog/azure-sql-database-and-azure-database-for-mysql-at-pass-summit/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Microsoft Azure","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"1794b1b9-593a-43dc-a5f1-c2f4123a93de","CreatedTime":"2018-11-05T18:00:32+08:00","UpdatedTime":"2018-11-06T18:17:23.1538096+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p><em>This post was co-authored by Peter Cooper, Senior Product Marketing Manager, Azure IoT and Mark Pendergrast, Director of Product Marketing, Microsoft Azure.</em></p>\r\n\r\n<p>It&rsquo;s easy to talk about all the cool things your company might do to leverage the Internet of Things (IoT). Figuring out how you&rsquo;re actually going to make them work for your business is a bit more challenging &mdash; particularly the part about how to monetize them.</p>\r\n\r\n<p>IoT technologies have major potential to open new revenue streams. Capitalizing on them often requires out-of-the-box thinking and a willingness to take smart risks.</p>\r\n\r\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a844ea9f-3e66-4cbd-9ee5-18cbf5f211bb.jpg\"><img alt=\"Prepare your Organization\" border=\"0\" height=\"540\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9cfaa36c-b018-4c6b-aba6-296b20e32061.jpg\" style=\"margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;\" title=\"Hero_IoT_Prepare your Org\" width=\"960\"></a></p>\r\n\r\n<p>We&rsquo;ve helped thousands of customers around the world profit from IoT. Over the course of these engagements, we&rsquo;ve found that their monetization models tend to fall into four categories. Here are some options to consider as you build your approach &mdash; take a look:</p>\r\n\r\n<h2>1. The one-and-done: one-time purchasing</h2>\r\n\r\n<p>A one-time purchase is a common model. IoT connectivity is added as a feature, allowing products to be sold at a premium or to stand out from the competition. This approach works great for scenarios where repeating, revenue-generating services are not required, and your products don&rsquo;t need ongoing support. For example, many <a href=\"https://customers.microsoft.com/en-us/story/askey\" target=\"_blank\">wearable devices</a> and <a href=\"https://customers.microsoft.com/en-us/story/legrand-manufacturing-azure\" target=\"_blank\">connected home products</a> are sold this way. Once the transaction is done, the customer owns the device outright.</p>\r\n\r\n<p>That&rsquo;s not the end of the story, however. The data you collect from these products can be extremely valuable. You can use it to improve products over time, get more bang for your marketing buck, and spot growth opportunities before your competitors do.</p>\r\n\r\n<p>This is the easiest pricing model for manufacturers to adopt because it&rsquo;s how things are generally sold today. The trick to making this model work is ensuring that continuing costs associated with connected products don&rsquo;t erode your profits over time. For example, if you&rsquo;re collecting and storing data or providing a dashboard to customers, these functions must be factored in.</p>\r\n\r\n<h2>2. Good, better, best: value-added product services</h2>\r\n\r\n<p>Keeping the revenue flowing after the product has been sold is a major growth opportunity for manufacturers. With connected products, you can offer subscriptions for value-added services. <a href=\"https://customers.microsoft.com/en-gb/story/buhlergroup-azure-machine-learning-iot-edge-switzerland\" target=\"_blank\">Food processing equipment leader Buhler</a>, for example, is using a subscription-based model for its grain-sorting machines, charging based on which features customers enable.</p>\r\n\r\n<p>In addition to boosting profits, subscriptions help you stay close to customers throughout the product lifecycle, not just when things break. Services can include anything from rich data and operational reporting to predictive maintenance alerts. Many companies take a tiered approach, offering a freemium option and charging for more advanced solutions. It&rsquo;s a great way to crack open a new market &mdash; give customers a taste of the value of connected products and they&rsquo;ll soon want more.</p>\r\n\r\n<p>The subscription service model does depart significantly from the single-transaction approach, though. Persuading buyers to pay an ongoing premium requires you to present a clear value proposition and provide strong customer support. Customers will expect regular improvements and a robust, reliable experience.</p>\r\n\r\n<h2>3. Pay-as-you-go: turning products into services</h2>\r\n\r\n<p>IoT is overturning the traditional ownership experience, allowing customers to pay only for what they use. Product-as-a-service models are familiar to anyone who has used a bike- or car-sharing service, where vehicles are tracked by GPS and rented by the hour or minute. The buyer avoids capital and maintenance expenses and always has the latest technology, while the vendor gets an ongoing revenue stream that can provide more profit and stability over the long term.<br>\r\n&nbsp;<br>\r\nThis model can work even for very complex and expensive products. For example, <a href=\"https://customers.microsoft.com/en-us/story/rollsroycestory\" target=\"_blank\">Rolls-Royce now sells flight hours instead of airplane engines</a>. Data collected from IoT sensors lets the company know exactly how long the engines have been used &mdash; and gives it the data it needs to keep them in top condition. Using advanced analytics, the company can predict and resolve mechanical issues before something breaks.</p>\r\n\r\n<h2>4. We&rsquo;re in this together: revenue-sharing</h2>\r\n\r\n<p>Confident your IoT solution will deliver improved results to customers? Consider a revenue-sharing model. Instead of selling products or services, you&rsquo;ll be selling outcomes. In fact, another name for this approach is &ldquo;outcomes as a service.&rdquo; <a href=\"https://cloudblogs.microsoft.com/industry-blog/industry/uncategorized/itron-creating-a-more-resourceful-world-through-digital-transformation/\" target=\"_blank\">One example is Itron</a>, whose Total Outcomes service provides IoT services to cities, charging customers based on cost savings and performance targets. Because it requires your company to take on some of the business risk, this model can be very attractive to customers. It&rsquo;s also the furthest from traditional manufacturing revenue models, and likely to require the most innovative thinking and pricing strategies.</p>\r\n\r\n<h2>Which model is right for your business?</h2>\r\n\r\n<p>Plan to invest some time and resources to figure out how you&rsquo;ll monetize IoT. Successful initiatives often start with a pilot project involving a few good customers. Beyond the IoT solution itself, systems, people, and processes will need to adapt to new ways of doing business. Get a roadmap for how you can start profiting from connected products in our white paper, <a href=\"https://download.microsoft.com/download/6/C/A/6CA242E0-361C-4B19-A66A-D9F276C3799C/Connected-Products-Whitepaper.pdf\" target=\"_blank\">Navigating the path to new IoT business opportunities through connected products</a>. It walks you through building a unique value proposition, monetization strategies, ways to address common roadblocks, a new technology approach, and how to manage organizational change.</p>\r\n","Link":"https://azure.microsoft.com/blog/four-models-businesses-like-yours-are-using-to-monetize-iot/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Microsoft Azure","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"8545fddf-f1a1-4514-986a-1b5966716a46","CreatedTime":"2018-11-01T18:00:38+08:00","UpdatedTime":"2018-11-06T18:17:23.1543709+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p><em>This blog is authored by Parikshit Savjani, Senior Program Manager, Microsoft Azure</em>&nbsp;</p>\r\n\r\n<p>The <a href=\"https://docs.microsoft.com/en-us/rest/api/mysql/\" target=\"_blank\">Azure Database for MySQL REST API</a> enables DevOps engineers to automate and integrate provisioning while configuring and operating managed MySQL servers and databases in Azure. The API allows the creation, enumeration, management, and deletion of MySQL servers and databases on the Azure Database for MySQL service.</p>\r\n\r\n<p>Azure Resource Manager (ARM) templates leverage the underlying REST API to declare and program the Azure resources required for deployments at scale, aligning with infrastructure as a code concept. The template parameterizes the Azure resource name, SKU, network, firewall configuration, and settings, allowing it to be created one time and used multiple times. ARM templates can be easily created using the <a href=\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-quickstart-create-templates-use-the-portal\" target=\"_blank\">Azure portal</a> or <a href=\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-quickstart-create-templates-use-visual-studio-code?tabs=CLI\" target=\"_blank\">Visual Studio Code</a>. They enable application packaging, standardization, and deployment automation, which can be integrated into the DevOps CI/CD pipeline. For instance, if you are looking to quickly deploy a web app with Azure Database for MySQL database, you can perform the end-to-end deployment using our <a href=\"https://azure.microsoft.com/en-us/resources/templates/101-webapp-managed-mysql/\" target=\"_blank\">Azure QuickStart template</a> from the GitHub gallery.</p>\r\n\r\n<p>You can learn more in our documentation about <a href=\"https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers\" target=\"_blank\">JSON template reference for an Azure Database for MySQL server</a>.</p>\r\n\r\n<p>If you are looking to build an ARM template to automate Azure Database for MySQL deployments for your organization, we would recommend you to start with our <a href=\"https://github.com/Azure/azure-quickstart-templates/tree/master/101-managed-mysql-with-vnet\" target=\"_blank\">Azure Quickstart template</a> first and build on top of it. If you encounter any issues or wish to contribute back, please raise <a href=\"https://github.com/Azure/azure-quickstart-templates/issues\" target=\"_blank\">an issue</a> or send <a href=\"https://github.com/Azure/azure-quickstart-templates/pulls\" target=\"_blank\">pull request</a> via GitHub.</p>\r\n\r\n<p>If you are new to ARM templates and would like to try it, you can start by following these steps:</p>\r\n\r\n<ul>\r\n\t<li>Clone or download the sample Azure QuickStart template from the Github gallery.</li>\r\n\t<li>Modify the azuredeploy.parameters.json to update the parameter values based on your preference and save the file.</li>\r\n\t<li>Use <a href=\"https://docs.microsoft.com/en-us/powershell/azure/get-started-azureps\" target=\"_blank\">Azure Powershell</a> or&nbsp; <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest\" target=\"_blank\">Azure cli</a> to create the Azure Database for MySQL server using the following commands.</li>\r\n</ul>\r\n\r\n<blockquote>\r\n<p><strong>Azure Powershell</strong></p>\r\n\r\n<pre class=\"notranslate\">\r\nConnect-AzureRmAccount\r\nSelect-AzureRmSubscription -SubscriptionName &lt;yourSubscriptionName&gt;\r\nNew-AzureRmResourceGroup -Name ExampleResourceGroup -Location &quot;West US2&quot;\r\nNew-AzureRmResourceGroupDeployment -Name ExampleDeployment -ResourceGroupName ExampleResourceGroup -TemplateFile c:\\MyTemplates\\azuredeploy.json -TemplateParameterFile c:\\MyTemplates\\azuredeploy.parameters.json</pre>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p><strong>Azure Cli</strong></p>\r\n\r\n<pre class=\"notranslate\">\r\naz login\r\naz group create -n ExampleResourceGroup  -l &ldquo;West US2&rdquo;\r\naz group deployment create -g $ ExampleResourceGroup   --template-file $ {templateloc} --parameters $ {parametersloc}</pre>\r\n</blockquote>\r\n\r\n<p>If you would like to quickly deploy an Azure Database for MySQL server with virtual network integration, you can click on the deploy button below which leverages the sample ARM template discussed.</p>\r\n\r\n<p><a href=\"https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2F101-managed-mysql-with-vnet%2Fazuredeploy.json\" target=\"_blank\"><img alt=\"deploybutton\" border=\"0\" height=\"34\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/685b74cb-fd16-4d0d-8387-3ab4fc766331.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"deploybutton\" width=\"161\"></a></p>\r\n\r\n<h2>More choice for management and deployment to Azure</h2>\r\n\r\n<p>If you are using HashiCorp&rsquo;s Terraform to manage your cloud infrastructure, you can leverage <a href=\"https://www.terraform.io/docs/providers/azurerm/r/mysql_server.html\" target=\"_blank\">azurerm_mysql_server</a>, <a href=\"https://www.terraform.io/docs/providers/azurerm/r/mysql_firewall_rule.html\" target=\"_blank\">azurerm_mysql_firewall_rule</a>, <a href=\"https://www.terraform.io/docs/providers/azurerm/r/mysql_configuration.html\" target=\"_blank\">azurerm_mysql_configuration</a>, <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.terraform.io%2Fdocs%2Fproviders%2Fazurerm%2Fr%2Fmysql_virtual_network_rule.html&amp;data=02%7C01%7Cpariks%40microsoft.com%7Cbcafe7b4f89743b3b4ce08d63ab2c848%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636760936887965424&amp;sdata=VuwdeaNsIacrVTfHHoSlaqNaLYBeEPIuDxkZ9AM7RJ4%3D&amp;reserved=0\" target=\"_blank\">azurerm_mysql_virtual_network_rule</a> and <a href=\"https://www.terraform.io/docs/providers/azurerm/r/mysql_database.html\" target=\"_blank\">azurerm_mysql_database</a> templates where the team is actively contributing and plugged in.</p>\r\n\r\n<p>If you are looking to quickly deploy a web app with Azure Database for MySQL database using HashiCorp Terraform, you can perform the end-to-end deployment using our <a href=\"https://github.com/Azure/terraform/tree/master/quickstart/WebAppMySql\" target=\"_blank\">Terraform QuickStart template</a> from the GitHub gallery.</p>\r\n\r\n<p>If you are looking to package, re-platform or modernize your traditional applications, you can also use <a href=\"https://stacksmith.bitnami.com/\" target=\"_blank\">Bitnami Stacksmith</a> which can generate ARM templates for you that will automatically set up and connect you to a managed Azure Database for MySQL service in Azure.</p>\r\n\r\n<h2>Next steps</h2>\r\n\r\n<p>Please continue to provide <a href=\"https://feedback.azure.com/forums/597982-azure-database-for-mysql\" target=\"_blank\">feedback on the features and functionality</a> that you want to see next. If you need any help or have questions, please check out the <a href=\"https://docs.microsoft.com/en-us/azure/mysql/\" target=\"_blank\">Azure Database for MySQL documentation</a>. Follow us on Twitter <a href=\"https://twitter.com/AzureDBMySQL\" target=\"_blank\">@AzureDBMySQL</a> latest news and announcements.</p>\r\n\r\n<h2>Acknowledgments</h2>\r\n\r\n<p>Special thanks to Brian Moore, Mark Gray, Kamaljit Bath, Qingqing Yuan, Bassu Hiremath, Jim Toland, Mark Bolz, Diana Putnam, and Harini Gupta for their contributions to this posting.</p>\r\n","Link":"https://azure.microsoft.com/blog/automate-your-azure-database-for-mysql-deployments-using-arm-templates/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Microsoft Azure","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"70f169fb-25da-4585-9e8e-ededd9865295","CreatedTime":"2018-11-01T16:30:37+08:00","UpdatedTime":"2018-11-06T18:17:23.154378+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>The Microsoft Devices Team is excited to announce the release of an open-source model for Component Firmware Update for Windows system developers – <strong><a href=\"https://github.com/Microsoft/CFU\">Component Firmware Update</a></strong><strong> (CFU).</strong> With CFU, you can easily deliver firmware updates through Windows Update by using CFU drivers.</p>\n<h1>Background</h1>\n<p>Computers and peripherals have components running their own software preprogrammed in the factory. However, over time, the factory software (“firmware”) must be updated to support new features or fix issues.</p>\n<p>Firmware updates for embedded components have three primary delivery mechanisms:</p>\n<ul>\n<li>Stand-alone tools</li>\n<li><a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/bringup/windows-uefi-firmware-update-platform\">Windows UEFI UpdateCapsule</a> drivers</li>\n<li>Component-specific firmware update drivers</li>\n</ul>\n<p>Each of those mechanisms have its own advantages. Stand-alone tools can support component-specific protocols but require the user to find and download the tools and find out if an update is available and applicable. UEFI UpdateCapsule drivers can be pushed through Windows Update but can only update components during boot-time when components may not be available or may not be attached. The most flexible mechanism is the component-specific firmware update driver, which can support component-specific protocols and can run whenever the device is enumerated on the system.</p>\n<p>Writing a firmware update driver for each component-specific protocol can become a burden, so we defined the Component Firmware Update (CFU) standard protocol for use in our firmware update drivers and components. The protocol permits us to use a standardized driver and protocol to deliver firmware to any component that supports CFU.</p>\n<p>Due to architectural differences, third-party firmware, or other issues, many of our components cannot support CFU. We designed CFU to allow a CFU-compatible component to receive firmware by using the CFU protocol and forward it to other components using their specific protocols. Thus, only one component in a collection of components needs to be CFU-compatible. The CFU driver delivers sub-component firmware to the primary component for forwarding to non-CFU components.</p>\n<p>For components with very limited battery power, such as small wireless peripherals, firmware downloads are expensive operations and waste significant battery life if the firmware is ultimately rejected by the peripheral. To avoid this, CFU “offers” a firmware image before it is downloaded, providing specific properties such as version, hardware platform, and so on. If the primary component accepts an offer, it may still reject the firmware after download due to integrity issues that may arise during the transport of the image, or if the received image properties do not match the offered properties.</p>\n<p>As part of our open-source effort, we are sharing the CFU protocol, driver sample, firmware sample code, and tool sample. This aims at enabling the system and peripheral developers to leverage this protocol, support their development, easily and automatically push firmware updates to Windows Update for many of their firmware components.</p>\n<h1>Goals and Non-Goals</h1>\n<p>CFU was developed with the following tenets in mind:</p>\n<ul>\n<li>Update must occur with little or no user disruption – no “update mode” that requires the user to wait or even be aware that an update is taking place.</li>\n<li>Update must be delivered through Windows Update drivers.</li>\n<li>Update must be able to wait to update a device until it becomes available.</li>\n<li>Drivers must not have to “know” specifics of any update package other than which component device to send it to.</li>\n<li>Evaluation of the appropriateness of the update lies with the component receiving it, not in the driver.</li>\n<li>Target must be able to reject firmware before it is downloaded if it is inappropriate.</li>\n<li>Update must permit third-party versioning schemes to be mapped to a standardized versioning scheme.</li>\n</ul>\n<p>CFU permits but does not specify:</p>\n<ul>\n<li>Authentication policies or methods</li>\n<li>Encryption policies or methods</li>\n<li>Rollback policies or methods</li>\n<li>Recovery of bricked firmware</li>\n</ul>\n<h1>System Overview</h1>\n<p>In CFU, a <em>primary</em> <em>component</em> is a device that understands the CFU protocol. This component can receive firmware from a CFU driver for itself or for the <em>sub-components</em> to which the component is connected. The CFU driver (<em>host</em>) is created by the component or device manufacturer and delivered through Windows Update. The driver is installed and loaded when the device is detected by Windows.</p>\n<h2>Primary Components and Sub-Components</h2>\n<p>A CFU-compatible system uses a hierarchical concept of a primary component and sub-components.  A primary component is a device that implements the device side of the CFU protocol and can receive updates for itself or its sub-components directly from the CFU driver. A primary component and sub-components can be internal or detachable.  A device may have multiple primary components, with or without sub-components, each with its own CFU driver.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/2df6976225cb82a255bb26a23424ef1d.png\"><img class=\"wp-image-54465 size-full aligncenter\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/2df6976225cb82a255bb26a23424ef1d.png\" alt=\"Flow chart describing CFU Driver.\" width=\"939\" height=\"543\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/2df6976225cb82a255bb26a23424ef1d.png 939w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/2df6976225cb82a255bb26a23424ef1d-300x173.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/2df6976225cb82a255bb26a23424ef1d-768x444.png 768w\" sizes=\"(max-width: 939px) 100vw, 939px\" /></a></p>\n<p>Sub-components are updated by the component after receiving a CFU firmware image that is targeted for the sub-component. The mechanism that the component uses to update its sub-components is implementation specific between the sub-component and the primary component and is beyond the scope of the CFU specification.</p>\n<h2>Offers and Payloads</h2>\n<p>A CFU driver (host) may contain multiple firmware images for a primary component and sub-components associated with the component.<a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/76445fa42446188a590161a74af65f61.png\"><img class=\"aligncenter size-full wp-image-54468\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/76445fa42446188a590161a74af65f61.png\" alt=\"Chart showing firmware images.\" width=\"974\" height=\"479\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/76445fa42446188a590161a74af65f61.png 974w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/76445fa42446188a590161a74af65f61-300x148.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/76445fa42446188a590161a74af65f61-768x378.png 768w\" sizes=\"(max-width: 974px) 100vw, 974px\" /></a></p>\n<p>A package within the host comprises an <em>offer</em> and a <em>payload</em> or image and other information necessary for the driver to load. The offer contains enough information about the payload to allow the primary component to decide if it is an acceptable payload.  Offer information includes a CFU protocol version, component ID (and sub-component ID if applicable), firmware version, release vs. debug status, and other information. For some devices, downloading and flashing new firmware is expensive for battery life and other reasons. By issuing an offer, the CFU protocol avoids downloading or flashing firmware that would be rejected based on versioning and other platform policies.</p>\n<p>The payload of a package is a range of addresses and bytes to be programmed. The bytes are opaque to the host.</p>\n<h2>Offer Sequence</h2>\n<p>The general firmware update sequence by using CFU is for the host to issue the offer of each package to the primary component. In general, the primary component can accept, reject, or skip the offer.</p>\n<ul>\n<li>Accept offer—The primary component is ready to accept the firmware that was offered. If an offer is accepted, the payload is immediately delivered to the primary component.</li>\n<li>Reject offer—The primary component is not interested in the firmware, possibly because it already has a better firmware, or the firmware violates some other internal policy.</li>\n<li>Skip offer—The primary component may be interested in the firmware, but it is choosing to skip it for now.</li>\n</ul>\n<p>If the offer is rejected or skipped, the host continues to cycle through its list of offers.  The driver repeats this cycle until all offers are rejected.</p>\n<p>The optional skip response permits the primary component to examine the entire offer list to arrange it for ordering dependencies according to internal policies. After it has prioritized the offers in the list, it can continue to skip and accept the highest priority offer when the host replays the sequence. After an offer has been accepted and installed it is subsequently rejected if offered in a later cycle because the entity is up to date.  The cycle ends when all offers have been rejected. Because updates can change the policies themselves, such as “jail-breaking” during development, all offers are issued every cycle, even those that were previously rejected.</p>\n<p>An offer can also be rejected if the primary component has accepted a download but must be restarted. In this case the component can reboot itself, if the user disruption is minimal, or the update can remain pending until the next system reboot. The host restarts the offer cycle after the reboot or component reset.</p>\n<p>Consider an example of a device that has four components: one primary component and three sub components. <u>Offers are made in no specific order</u> within a cycle. Here is a representation of a possible host offer cycle:</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/e2f3ef7ec1fb05b80f6ab5b8d1290113.png\"><img class=\"aligncenter size-full wp-image-54471\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/e2f3ef7ec1fb05b80f6ab5b8d1290113.png\" alt=\"Flow chart showing sub components. \" width=\"899\" height=\"525\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/e2f3ef7ec1fb05b80f6ab5b8d1290113.png 899w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/e2f3ef7ec1fb05b80f6ab5b8d1290113-300x175.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/e2f3ef7ec1fb05b80f6ab5b8d1290113-768x448.png 768w\" sizes=\"(max-width: 899px) 100vw, 899px\" /></a></p>\n<p>In an example, in the first round, all offers are skipped to see all the Offers.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/5d63ae5483fc55228f9b169a5486bf1a.png\"><img class=\"aligncenter size-full wp-image-54474\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/5d63ae5483fc55228f9b169a5486bf1a.png\" alt=\"Second flow chart showing sub-components. \" width=\"899\" height=\"525\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/5d63ae5483fc55228f9b169a5486bf1a.png 899w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/5d63ae5483fc55228f9b169a5486bf1a-300x175.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/5d63ae5483fc55228f9b169a5486bf1a-768x448.png 768w\" sizes=\"(max-width: 899px) 100vw, 899px\" /></a></p>\n<p>After seeing all the offers, the primary component determines that sub-component 1 must be updated before sub-component 3, and that the order of the primary component and sub-component 2 does not matter. The component sets sub-component 3 as lower priority than sub-component 1.</p>\n<p>In the next offer cycle, the sub-component 3 offer is skipped again because sub-component 1 has not yet been updated and is higher priority.  Each of the other offers is accepted and updated.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/01f3a22e59d18752a7ad9d8147a692b0.png\"><img class=\"aligncenter size-full wp-image-54480\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/01f3a22e59d18752a7ad9d8147a692b0.png\" alt=\"Third flow chart showing sub-components. \" width=\"899\" height=\"525\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/01f3a22e59d18752a7ad9d8147a692b0.png 899w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/01f3a22e59d18752a7ad9d8147a692b0-300x175.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/01f3a22e59d18752a7ad9d8147a692b0-768x448.png 768w\" sizes=\"(max-width: 899px) 100vw, 899px\" /></a></p>\n<p>In the next round, the sub-component 3 offer is accepted because the requirement to first update sub-component 2 has been met. All other offers are rejected because they are up to date.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/d999053d13f96c2ab030c9189a67c4d5.png\"><img class=\"aligncenter size-full wp-image-54483\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/d999053d13f96c2ab030c9189a67c4d5.png\" alt=\"Fourth flow chart showing sub-components.\" width=\"899\" height=\"527\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/d999053d13f96c2ab030c9189a67c4d5.png 899w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/d999053d13f96c2ab030c9189a67c4d5-300x176.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/d999053d13f96c2ab030c9189a67c4d5-768x450.png 768w\" sizes=\"(max-width: 899px) 100vw, 899px\" /></a></p>\n<p>Finally, in the last round, all offers are Rejected because the primary component and all sub-components are up to date.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/097b0b0216a7b3cb06ae4d4b2f904daa.png\"><img class=\"aligncenter size-full wp-image-54486\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/097b0b0216a7b3cb06ae4d4b2f904daa.png\" alt=\"Final flow chart showing sub-components.\" width=\"899\" height=\"527\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/097b0b0216a7b3cb06ae4d4b2f904daa.png 899w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/097b0b0216a7b3cb06ae4d4b2f904daa-300x176.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/097b0b0216a7b3cb06ae4d4b2f904daa-768x450.png 768w\" sizes=\"(max-width: 899px) 100vw, 899px\" /></a></p>\n<p>At this time, the host has done all it can do. It ends the update process and updates its status in <strong>Device Manager</strong> according to the update results.</p>\n<p>So, this mechanism permits ordering of updates, even to the same entity.  For example, if a component cannot receive version Y until it has version X due to some breaking change, both versions could be included, and version Y could be skipped until version X has been applied.</p>\n<h2>CFU Driver (host) Independence</h2>\n<p>It is important to note that the host does not have to make any decisions based on content of the offers or payloads. It simply sends the offers down and sends down the payloads that are accepted. It does not have to have any logic about what it is offering.  This permits it to be reused for diverse components and sub-components by changing only the offers and payloads it contains, and the component that the driver loads on.</p>\n<p>The host does know the standard format of the offers to send the offer command. The host needs to understand the standard format of the payloads so that it can break them into addresses and bytes to deliver to the primary component. In the payload, the host does not need to know what data those fields contain.</p>\n<h2>Payload Delivery</h2>\n<p>After an offer has been accepted, the CFU Driver (the host) proceeds to download the firmware image, or Payload.  The primary component may prepare itself to receive it upon accepting the offer, or it may wait for the download to commence before making any changes.  The primary component may optionally cache the offer to check it against the payload after the payload is delivered but if possible, must evaluate the payload on its own merit, regardless of the offer.</p>\n<p>Payload Delivery is accomplished in three phases, essentially, beginning, middle and end.</p>\n<p>The Payload, in simplest terms, is a set of addresses and fixed-size arrays of bytes, for example Address 0x0000 0000 and 16 associated bytes, then Address 0x0000 0010 and 16 more bytes.  These are turned into write requests, one per address in the set, with its associated bytes.</p>\n<p>The first write request is flagged so that the Component can do any preparations that it did not do when the Offer was first accepted, such as erase memory.  After the first write request, the Driver sends more Address + Data write commands until the final write.  The final write is flagged such that the Component knows that the download is complete and that it should validate the download and invoke or forward the new firmware.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/133b0ff2c3a8a99b8fdd04046878ff9f.png\"><img class=\"aligncenter size-full wp-image-54489\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/133b0ff2c3a8a99b8fdd04046878ff9f.png\" alt=\"Chart showing download.\" width=\"441\" height=\"849\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/133b0ff2c3a8a99b8fdd04046878ff9f.png 441w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/10/133b0ff2c3a8a99b8fdd04046878ff9f-156x300.png 156w\" sizes=\"(max-width: 441px) 100vw, 441px\" /></a></p>\n<p>The CFU Protocol specification defines several other result codes to assist in troubleshooting failures. See the complete specification for details. There is also room for implementers to add other codes for their own specific purposes, such as requesting immediate resets.</p>\n<h2>Payload Validation and Authentication</h2>\n<p>One of the most important aspects of firmware update is the validation of incoming firmware.  The first line of defense is to use a reliable transport mechanism with built-in robustness, such as USB or Bluetooth. These transports have built-in CRCs and retry mechanisms so that data is delivered reliably and in order.  Interfaces such as I<sup>2</sup>C<img src=\"https://s.w.org/images/core/emoji/11/72x72/2122.png\" alt=\"™\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />, SPI and UART do not have those mechanisms built-in and such robustness must be provided by higher layers.  At Microsoft, we prefer to use USB or Bluetooth Human Interface Device Class (HID) protocols for CFU, with a Vendor-Specific report structure, but any bidirectional command-response based mechanism can be used.</p>\n<p>At a minimum, the primary component should verify bytes after each write to ensure that the data is properly stored before accepting the next set of bytes. Also, a CRC or hash should be calculated on the download in its entirety to be verified after the download is complete, to ensure that the data was not modified in transit. The delivery of a reference CRC or hash to be validated is beyond the scope of the protocol but is typically contained within the download image itself and verified by the primary component or sub-component that receives it before issuing a Result Code.</p>\n<p>For enhanced protection, a cryptographic signature mechanism is recommended to provide end-to-end protection against accidental modification or intentional attack at any stage in the update delivery, from creation at the manufacturer to invocation by the component. If the download is required be confidential, an encryption mechanism can also be employed. Decryption and key management is also beyond of scope of the CFU protocol specification.</p>\n<p>After the image has been authenticated, its properties should be validated against the offer and any other internal rules that the manufacturer requires. CFU does not specify the rules to be applied &#8212; these are up to the implementer. It is important to do this check <em>after </em>the update has been authenticated so that any self-declared characteristics can be considered trustworthy.</p>\n<p>While it is possible (and recommended) for each sub-Component to validate its own images, one advantage of CFU is that the primary component can accept offers and validate the sub-component image on behalf of the sub-component by using a standardized validation algorithm devised by the manufacturer. The manufacturer can then design the primary component to apply the firmware by using less-secure means such as ARM-SWD, JTAG or other hardware-based methods.</p>\n<h2>Payload Invocation</h2>\n<p>One of the advantages of the CFU Protocol is that it is run at the application level in the primary component. It is not necessary to place the component in any special mode that disrupts its normal operation. As long as the component can receive and store the incoming payload without significant disruption, it can continue to do other tasks. The only potential disruption comes when the new firmware must be invoked.</p>\n<p>There are two recommended means to avoid that disruption, although others are possible.  Both involve having enough storage to maintain the current running application while receiving at least one additional image. For the primary component, this means that it requires at least twice the normal application space, one space for the running primary component application, and one space for the incoming firmware package. For sub-components whose images are smaller than the primary component image, the primary component can use the extra space to store the sub-component image in its entirety.  If the sub-component image is larger than the primary component firmware, then separate packages are necessary, and must all be downloaded successfully for the sub-component update to complete.</p>\n<p>The first invocation method uses a small bootloader image to select one of multiple images to run when the device is reset, typically at boot time, connection or power-up. The image selection algorithm is implementation specific, but typically is based on an algorithm involving the version of code, and an indication of successful validation of that image either at boot or when it was received. This is the most generic approach.</p>\n<p>A second invocation method is to physically swap the memory of the desired image into the active address space upon reset. This capability is available in some microcontrollers and can also be accomplished with logic controls on external memory address bits.  This method has a disadvantage in that it requires specialized hardware but has the advantage that all images are statically linked to the same address space, and the mechanism does not require any bootloader.</p>\n<h1>CFU Protocol Limitations</h1>\n<p>There are a few caveats around CFU.</p>\n<ul>\n<li>CFU cannot update a “bricked” component that can no longer run the protocol, yet new firmware has the potential to brick the component if not thoroughly validated and tested.</li>\n</ul>\n<p><em>Care must be taken when adopting any update mechanism to always test the update mechanism prior to every release.</em></p>\n<p>At Microsoft, we always build a “v.next” version so that we can validate that CFU has not been broken and can validate and invoke any subsequent update properly. Unbricking the component is beyond the of scope for the CFU protocol because the device cannot run the CFU protocol.</p>\n<p>Implementers can use other methods to prevent bricking a device, such as having a third “fallback” fail-safe firmware image that is capable of CFU but that may not provide some features, or by implementing CFU as a function of the bootloader that is called by the application. If the application fails, the bootloader can be forced to take over and either fall back or provide a ‘bare-bones’ CFU interface until it is successfully updated.</p>\n<ul>\n<li>CFU does not provide security. Security features can easily be overlaid on top of CFU by adding features to the validation algorithms used by the component and adding necessary data structures to the downloaded images such as Public Key Digital Signatures and appropriate key management.</li>\n<li>CFU requires extra memory to store the incoming images because the protocol runs as part current firmware on the primary component. This will add cost to a system for the benefit of non-disruptive updates to the system.</li>\n</ul>\n<p>Updating sub-component images that are larger than the component’s available storage requires dividing the sub-component image into a set of smaller update packages called <em>segments </em>and applying each segment separately.</p>\n<p>The CFU protocol does not prohibit pausing the download to while portions of the image are forwarded. Thus, it may be possible to stream a large image through the primary component without segmentation. Such “streamed” segmentation is beyond the scope of the CFU specification. Care must be taken that the image can be properly validated after such a download is complete, such as maintenance of a running CRC or hash, as it is not fully resident in the primary component at the end of the download.</p>\n<p>CFU presumes that the primary component has a set of validation rules to use. If those rules are to be changed, the component must first be successfully updated by using the old rules before new rules can be applied.</p>\n<p>There is example source code for the Host CFU drivers and Firmware along with documentation on GitHub.  <strong><a href=\"https://github.com/Microsoft/CFU\">Component Firmware Update.</a></strong></p>\n<p>The post <a rel=\"nofollow\" href=\"https://blogs.windows.com/buildingapps/2018/10/17/introducing-component-firmware-update/\">Introducing Component Firmware Update</a> appeared first on <a rel=\"nofollow\" href=\"https://blogs.windows.com/buildingapps\">Windows Developer Blog</a>.</p>\n","Link":"https://blogs.windows.com/buildingapps/2018/10/17/introducing-component-firmware-update/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Microsoft Devices Team","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"01bdc919-add4-4aaa-a084-fcf8d9c850e1","CreatedTime":"2018-10-18T07:02:02+08:00","UpdatedTime":"2018-11-06T18:17:23.1543788+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>A frequent question we get from developers is, “How can I encourage customers to review and give feedback on my app?”</p>\n<p>User feedback isn’t just useful for product development—it can significantly affect whether a new customer decides to download your product. So, aside from checking your <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/reviews-report\">reviews report</a> and <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/feedback-report\">feedback report</a>, what can you do to boost your rating and get more reviews and feedback?</p>\n<p>We’ve compiled <strong>6 quick tips</strong> to help you out.</p>\n<h1><strong>Ask for reviews</strong></h1>\n<p>Be direct! It’s the best way to let customers know you want to hear what they think.</p>\n<h2><strong>1) Ask in-app</strong></h2>\n<p>Prompt your customers in-app with a <a href=\"https://docs.microsoft.com/en-us/windows/uwp/monetize/request-ratings-and-reviews#show-a-rating-and-review-dialog-in-your-app\">rating and review dialog</a> by implementing just a few lines of code. Or you can directly <a href=\"https://docs.microsoft.com/en-us/windows/uwp/monetize/request-ratings-and-reviews#launch-the-rating-and-review-page-for-your-app-in-the-store\">launch the rating and review page</a> for your app in the Microsoft Store. You can also use the let customers <a href=\"https://docs.microsoft.com/en-us/windows/uwp/monetize/launch-feedback-hub-from-your-app\">directly launch Feedback Hub from your app</a>.</p>\n<h2><strong>2) Ask with push notifications</strong></h2>\n<p>Send a <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/send-push-notifications-to-your-apps-customers#notification-template-types\">toast or tile notification</a> asking for ratings and reviews. To target only customers who haven’t yet rated your app, <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/create-customer-segments\">first create a customer segment with the definition Has rated == false</a>, then use push notifications to engage them.</p>\n<p><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362.png\"><img class=\"aligncenter wp-image-54237 size-full\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362.png\" alt=\"Defining inclusion conditions for push notifications. \" width=\"1391\" height=\"182\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362.png 1391w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362-300x39.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362-768x100.png 768w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ae8960baeac3396f7c5939258c307362-1024x134.png 1024w\" sizes=\"(max-width: 1391px) 100vw, 1391px\" /></a></p>\n<h2><strong>3) Ask on Microsoft Store</strong></h2>\n<p>Add a request for reviews and feedback in the <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/create-app-store-listings#whats-new-in-this-version\">What’s new in this version</a> section or the <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/create-app-store-listings#description\">description</a> of your Microsoft Store listing. After you list any updates, let your customers know you’re looking for feedback on what you’ve updated by saying something like “Please help us improve your experience by reviewing our app.”</p>\n<div id=\"attachment_54231\" style=\"width: 1564px\" class=\"wp-caption aligncenter\"><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed.png\"><img class=\"wp-image-54231 size-full\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed.png\" alt=\"&quot;What's new in this version&quot; app summary.\" width=\"1554\" height=\"356\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed.png 1554w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed-300x69.png 300w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed-768x176.png 768w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/ba1df4a8d26463051e70630abdf821ed-1024x235.png 1024w\" sizes=\"(max-width: 1554px) 100vw, 1554px\" /></a><p class=\"wp-caption-text\">Screenshot from MEGA Privacy Microsoft Store listing page.</p></div>\n<h1><strong>Respond to your customers</strong></h1>\n<p>Thoughtful responses tell your customers you care about their experiences.</p>\n<h2><strong>4) Respond directly to reviews</strong></h2>\n<p>Let customers know their opinions matter. So long as they haven’t opted out of receiving responses, you can respond to customer reviews via API or in the dashboard. Read more on how to do that <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/respond-to-customer-reviews\">here</a>.</p>\n<div id=\"attachment_54234\" style=\"width: 569px\" class=\"wp-caption aligncenter\"><a href=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/9cae0dc64f7c139b262bcfc71987a998.png\"><img class=\"wp-image-54234 size-full\" src=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/9cae0dc64f7c139b262bcfc71987a998.png\" alt=\"Example of responding directly to customer reviews.\" width=\"559\" height=\"244\" srcset=\"https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/9cae0dc64f7c139b262bcfc71987a998.png 559w, https://blogs.windows.com/uploads/mswbprod/sites/3/2018/09/9cae0dc64f7c139b262bcfc71987a998-300x131.png 300w\" sizes=\"(max-width: 559px) 100vw, 559px\" /></a><p class=\"wp-caption-text\">Screenshot from Sketchable reviews page on their Microsoft Store listing</p></div>\n<h2><strong>5) Respond directly to feedback</strong></h2>\n<p>Want to address a particular comment? Use <a href=\"https://docs.microsoft.com/en-us/windows/uwp/monetize/launch-feedback-hub-from-your-app\">Feedback Hub</a> in your app. You can respond publicly or privately and post updates on the status of any user issue you’re working to resolve.</p>\n<p>Keep your responses shorter than 1,000 words, polite, and to the point. Read more on responding to feedback <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/respond-to-customer-feedback\">here</a>.</p>\n<p>When responding to reviews and feedback, keep your responses polite and respectful, because customers can report inappropriate or abusive responses, and we take those reports seriously.</p>\n<h2><strong>6) Fix the pain points </strong></h2>\n<p>If several reviewers are suggesting the same new feature or fixes, consider releasing a new version with those updates—and when you do, make a note in the app <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/create-app-descriptions\">description</a> or <a href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/create-app-store-listings#whats-new-in-this-version\">“What’s new in this version” section</a> so customers know what issues have been fixed. You might even mention that the issues were identified based on customer feedback and ask them to continue letting you know what they think.</p>\n<p>We hope these tips will help you let your customers know you want their input—and then let them know they’ve been heard.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blogs.windows.com/buildingapps/2018/09/20/the-top-6-ways-to-boost-ratings-reviews-and-feedback-for-your-app/\">The top 6 ways to boost ratings, reviews, and feedback for your app</a> appeared first on <a rel=\"nofollow\" href=\"https://blogs.windows.com/buildingapps\">Windows Developer Blog</a>.</p>\n","Link":"https://blogs.windows.com/buildingapps/2018/09/20/the-top-6-ways-to-boost-ratings-reviews-and-feedback-for-your-app/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Microsoft Store Team","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"a4efd0f1-2ba9-4e41-bfdd-857d9c17dc70","CreatedTime":"2018-09-21T00:00:25+08:00","UpdatedTime":"2018-11-06T18:17:23.1543794+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>Since we <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">shipped .NET Standard 2.0</a><span> </span>about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of the new concepts as well as a number of small improvements that make your life easier across the various implementations of .NET.</p>\n<p>Keep reading to learn more about what&#8217;s new in this latest release, what you need to know about platform support, governance and coding.</p>\n<h2>What&#8217;s new in .NET Standard 2.1?</h2>\n<p>In total, about 3k APIs are planned to be added in .NET Standard 2.1. A good chunk of them are brand-new APIs while others are existing APIs that we added to the standard in order to converge the .NET implementations even further.</p>\n<p>Here are the highlights:</p>\n<ul>\n<li><strong><code>Span&lt;T&gt;</code></strong>. In .NET Core 2.1 we&#8217;ve added<span> </span><code>Span&lt;T&gt;</code><span> </span>which is an array-like type that allows representing managed and unmanaged memory in a uniform way and supports slicing without copying. It&#8217;s at the heart of most performance-related improvements in .NET Core 2.1. Since it allows managing buffers in a more efficient way, it can help in reducing allocations and copying. We consider<span> </span><code>Span&lt;T&gt;</code><span> </span>to be a very fundamental type as it requires runtime and compiler support in order to be fully leveraged. If you want to learn more about this type, make sure to read<span> </span><a href=\"https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\" rel=\"nofollow\">Stephen Toub&#8217;s excellent article on<span> </span><code>Span&lt;T&gt;</code></a>.</li>\n<li><strong>Foundational-APIs working with spans</strong>. While<span> </span><code>Span&lt;T&gt;</code><span> </span>is available as a .NET Standard compatible NuGet package (<code>System.Memory</code>) already, adding this package cannot extend the members of .NET Standard types that deal with spans. For example, .NET Core 2.1 added many APIs that allow working with spans, such as<span> </span><code>Stream.Read(Span&lt;Byte&gt;)</code>. Part of the value proposition to add span to .NET Standard is to add theses companion APIs as well.</li>\n<li><strong>Reflection emit</strong>. To boost productivity, the .NET ecosystem has always made heavy use of dynamic features such as reflection and reflection emit. Emit is often used as a tool to optimize performance as well as a way to generate types on the fly for proxying interfaces. As a result, many of you asked for reflection emit to be included in the .NET Standard. Previously, we&#8217;ve tried to provide this via a NuGet package but we discovered that we cannot model such a core technology using a package. With .NET Standard 2.1, you&#8217;ll have access to Lightweight Code Generation (LCG) as well as Reflection Emit. Of course, you might run on a runtime that doesn&#8217;t support running IL via interpretation or compiling it with a JIT, so we also exposed two new capability APIs that allow you to check for the ability to generate code at all (<code>RuntimeFeature.IsDynamicCodeSupported</code>) as well as whether the generated code is interpreted or compiled (<code>RuntimeFeature.IsDynamicCodeCompiled</code>). This will make it much easier to write libraries that can exploit these capabilities in a portable fashion.</li>\n<li><strong>SIMD</strong>. .NET Framework and .NET Core had <a href=\"https://blogs.msdn.microsoft.com/dotnet/2014/04/07/the-jit-finally-proposed-jit-and-simd-are-getting-married/\">support for SIMD</a> for a while now. We&#8217;ve leveraged them to speed up basic operations in the BCL, such as string comparisons. We&#8217;ve received quite a few requests to expose these APIs in .NET Standard as the functionality requires runtime support and thus cannot be provided meaningfully as a NuGet package.</li>\n<li><strong><code>ValueTask</code><span> </span>and<span> </span><code>ValueTask&lt;T&gt;</code></strong>. In<span> </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/\" rel=\"nofollow\">.NET Core 2.1</a>, the biggest feature was improvements in our fundamentals to support high-performance scenarios, which also included making<span> </span><code>async</code>/<code>await</code><span> </span>more efficient.<span> </span><code>ValueTask&lt;T&gt;</code><span> </span>already exists and allows to return results if the operation completed synchronously without having to allocate a new<span> </span><code>Task&lt;T&gt;</code>. With .NET Core 2.1 we&#8217;ve improved this further which made it useful to have a corresponding non-generic<span> </span><code>ValueTask</code><span> </span>that allows reducing allocations even for cases where the operation has to be completed asynchronously, a feature that types like<span> </span><code>Socket</code><span> </span>and<span> </span><code>NetworkStream</code><span> </span>now utilize. Exposing these APIs in .NET Standard 2.1 enables library authors to benefit from these improvements both, as a consumer, as well as a producer.</li>\n<li><strong>DbProviderFactories</strong>. In .NET Standard 2.0 we added almost all of the primitives in ADO<span></span>.NET to allow O/R mappers and database implementers to communicate. Unfortunately,<span> </span><code>DbProviderFactories</code><span> </span>didn&#8217;t make the cut for 2.0 so we&#8217;re adding it now. In a nutshell,<span> </span><code>DbProviderFactories</code><span> </span>allows libraries and applications to utilize a specific ADO.NET provider without knowing any of its specific types at compile time, by selecting among registered<span> </span><code>DbProviderFactory</code><span> </span>instances based on a name, which can be read from, for example, configuration settings.</li>\n<li><strong>General Goodness</strong>. Since .NET Core was open sourced, we&#8217;ve added many small features across the base class libraries such as<span> </span><code>System.HashCode</code><span> </span>for combining hash codes or new overloads on<span> </span><code>System.String</code>. There are about 800 new members in .NET Core and virtually all of them got added in .NET Standard 2.1.</li>\n</ul>\n<p>For more details, you might want to check out the<span> </span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.1.md\">full API diff</a><span> </span>between .NET Standard 2.1 and .NET Standard 2.0. You can also use<span> </span><a href=\"https://apisof.net/catalog/System.Span%3CT%3E\" rel=\"nofollow\">apisof.net</a><span> </span>to quickly check whether a given API will be included with .NET Standard 2.1.</p>\n<h2>.NET platform support</h2>\n<p>In case you missed our<span> </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/\" rel=\"nofollow\">Update on .NET Core 3.0 and .NET Framework 4.8</a>, we&#8217;ve described our support for .NET Framework and .NET Core as follows:</p>\n<p style=\"padding-left: 30px\"><em><strong>.NET Framework</strong> is the implementation of .NET that&#8217;s installed on over one billion machines and thus needs to remain as compatible as possible. Because of this, it moves at a slower pace than .NET Core. Even security and bug fixes can cause breaks in applications because applications depend on the previous behavior. We will make sure that .NET Framework always supports the latest networking protocols, security standards, and Windows features.</em></p>\n<p style=\"padding-left: 30px\"><em><strong>.NET Core</strong> is the open source, cross-platform, and fast-moving version of .NET. Because of its side-by-side nature it can take changes that we can&#8217;t risk applying back to .NET Framework. This means that .NET Core will get new APIs and language features over time that .NET Framework cannot. At Build we showed a demo how the file APIs are faster on .NET Core. If we put those same changes into .NET Framework we could break existing applications, and we don&#8217;t want to do that.</em></p>\n<p>Given many of the API additions in .NET Standard 2.1 require runtime changes in order to be meaningful, .NET Framework 4.8 will remain on .NET Standard 2.0 rather than implement .NET Standard 2.1. .NET Core 3.0 as well as upcoming versions of Xamarin, Mono, and Unity will be updated to implement .NET Standard 2.1.</p>\n<p>Library authors who need to support .NET Framework customers should stay on .NET Standard 2.0. In fact, most libraries should be able to stay on .NET Standard 2.0, as the API additions are largely for advanced scenarios. However, this doesn&#8217;t mean that library authors cannot take advantage of these APIs even if they have to support .NET Framework. In those cases they can use multi-targeting to compile for both .NET Standard 2.0 as well as .NET Standard 2.1. This allows writing code that can expose more features or provide a more efficient implementation on runtimes that support .NET Standard 2.1 while not giving up on the bigger reach that .NET Standard 2.0 offers.</p>\n<p>For more recommendations on targeting, check out the brand new documentation on<span> </span><a href=\"https://docs.microsoft.com/en-us/dotnet/standard/library-guidance/cross-platform-targeting\" rel=\"nofollow\">cross-platform targeting</a>.</p>\n<h2><a href=\"https://github.com/Microsoft/dotnet-blog/blob/master/2018/11-Nov/net-standard-21/net-standard-21.md#governance-model\" id=\"user-content-governance-model\" class=\"anchor\"></a>Governance model</h2>\n<p>The .NET Standard 1.x and 2.0 releases focused on exposing existing concepts. The bulk of the work was on the .NET Core side, as this platform started with a much smaller API set. Moving forward, we&#8217;ll often have to standardize brand-new technologies, which means we need to consider the impact on all .NET implementations, not just .NET Core, and including those managed in other communities such as Mono or Unity. Our governance model has been updated to best include all considerations, including:</p>\n<p><strong>A .NET Standard review board</strong>. To ensure we don&#8217;t end up adding large chunks of API surface that cannot be implemented, a review board will sign-off on API additions to the .NET Standard. The board comprises representatives from .NET platform, Xamarin and Mono, Unity and the .NET Foundation and will be chaired by Miguel de Icaza. We will continue to strive to make decisions based on consensus and will leverage Miguel’s extensive expertise and experience building .NET implementations that are supported by multiple parties when needed.</p>\n<p><strong>A formal approval process</strong>. The .NET Standard 1.x and 2.0 version were largely mechanically derived by computing which APIs existing .NET implementations had in common, which means the API sets were effectively a computational outcome. Moving forward, we are implementing an editorial approach:</p>\n<ul>\n<li><strong>Anyone can submit proposals for API additions to the .NET Standard</strong>.</li>\n<li><strong>New members on standardized types are automatically considered</strong>. To prevent accidental fragmentation, we&#8217;ll automatically consider all members added by any .NET implementation on types that are already in the standard. The rationale here is that divergence at that the member level is not desirable and unless there is something wrong with the API it&#8217;s likely a good addition.</li>\n<li><strong>Acceptance requires</strong>:\n<ul>\n<li><strong>A sponsorship from a review board member</strong>. That person will be assigned the issue and is expected to shepherd the issue until it&#8217;s either accepted or rejected. If no board member is willing to sponsor the proposal, it will be considered rejected.</li>\n<li><strong>A stable implementation in at least one .NET implementation</strong>. The implementation must be licensed under an open source license that is compatible with MIT. This will allow other .NET implementations to jump- start their own implementations or simply take the feature as-is.</li>\n</ul>\n</li>\n<li><strong>.NET Standard updates are planned and will generally follow a set of themes</strong>. We avoid releases with a large number of tiny features that aren&#8217;t part of a common set of scenarios. Instead, we try to define a set of goals that describe what kind of feature areas a particular .NET Standard version provides. This simplifies answering the question which .NET Standard a given library should depend on. It also makes it easier for .NET implementations to decide whether it&#8217;s worth implementing a higher version of .NET Standard.</li>\n<li><strong>The version number</strong><span> </span>is subject to discussion and is generally a function of how significant the new version is. While we aren&#8217;t planning on making breaking changes, we&#8217;ll rev the major version if the new version adds large chunks of APIs (like when we doubled the number of APIs in .NET Standard 2.0) or has sizable changes in the overall developer experience (like the added compatibility mode for consuming .NET Framework libraries we added in .NET Standard 2.0).</li>\n</ul>\n<p>For more information, take a look at the<span> </span><a href=\"https://github.com/dotnet/standard/tree/master/docs/governance/README.md\">.NET Standard governance model</a><span> </span>and the<span> </span><a href=\"https://github.com/dotnet/standard/blob/master/docs/governance/board.md\">.NET Standard review board</a>.</p>\n<h2>Summary</h2>\n<p>The definition of .NET Standard 2.1 is ongoing. You can watch<span> </span><a href=\"https://github.com/dotnet/standard/milestone/3\">our progress on GitHub</a><span> </span>and still file requests.</p>\n<p>If you want to quickly check whether a specific API is in .NET Standard (or any other .NET platform), you can use<span> </span><a href=\"https://apisof.net/catalog/System.Span%3CT%3E\" rel=\"nofollow\">apisof.net</a>. You can also use the .NET Portability Analyzer to check whether an existing project or binary can be ported to .NET Standard 2.1.</p>\n<p>Happy coding!</p>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Immo Landwerth [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"e5ee9036-23a3-45db-9053-8a5c8e3d324d","CreatedTime":"2018-11-06T01:42:38+08:00","UpdatedTime":"2018-11-06T18:17:23.1543799+08:00","Status":0},{"TitleEn":null,"ContentEn":"<blockquote><p>This post was written by <a href=\"https://github.com/vkvenkat\">Varun Venkatesan</a>, <a href=\"https://github.com/litian2025\">Li Tian</a>, <a href=\"https://github.com/dp7\">Denis Pravdin</a>, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier 2019. <span>You can use this tool to use to make .NET Core applications faster on Intel processors.</span></p></blockquote>\n<p>Last year in the <span>.NET blog</span>, we discussed .NET Core Performance Profiling with Intel® VTune<img src=\"https://s.w.org/images/core/emoji/2.4/72x72/2122.png\" alt=\"™\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Amplifier 2018 including profiling Just-In-Time (JIT) compiled .NET Core code on Microsoft Windows* and Linux* operating systems. This year <span><a href=\"https://software.intel.com/en-us/intel-vtune-amplifier-2019-release-notes-what-s-new\">Intel VTune<img src=\"https://s.w.org/images/core/emoji/2.4/72x72/2122.png\" alt=\"™\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Amplifier 2019</a></span> was launched on September 12th, 2018 with improved source code analysis for .NET Core applications. It includes .NET Core support for profiling a remote Linux target and analyzing the results on a Windows host. We will walk you through a few scenarios to see how these new VTune Amplifier features can be used to optimize .NET Core applications.</p>\n<p>Note that VTune Amplifier is a commercial product. In some cases, you may be eligible to obtain a free copy of VTune Amplifier under specific terms. To see if you qualify, please refer to <span><a href=\"https://software.intel.com/en-us/qualify-for-free-software\">https://software.intel.com/en-us/qualify-for-free-software</a></span> and choose download options at <span><a href=\"https://software.intel.com/en-us/vtune/choose-download\">https://software.intel.com/en-us/vtune/choose-download</a></span>.</p>\n<h1>Background</h1>\n<p>Before this release, source code analysis on VTune Amplifier hotspots for JIT compiled .NET Core code was not supported on Linux and limited support on Windows. Hotspot functions were only available at the assembly-level and not at source-level, as shown in the figure below.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot1.png\" alt=\"\" width=\"882\" height=\"748\" class=\"aligncenter size-full wp-image-19735\" /></p>\n<p>VTune Amplifier 2019 addresses this issue and provides full source code analysis for JIT compiled code on both Windows and Linux. It also supports remote profiling a Linux target from a Windows host. Let’s see how these features work using sample .NET Core applications on local Linux host, local Windows host and remote Linux profiling with Windows host analysis.</p>\n<p>Here is the hardware/software configuration for the test system:</p>\n<ul>\n<li>Processor: Intel(R) Core(TM) i7-5960X CPU @ 3.00GHz</li>\n<li>Memory: 32 GB</li>\n<li>Ubuntu* 16.04 LTS (64-bit)</li>\n<li>Microsoft Windows 10 Pro Version 1803 (64-bit)</li>\n<li>.NET Core SDK 2.1.401</li>\n</ul>\n<h1>Profiling .NET Core applications on a local Linux host</h1>\n<p>Let’s create a sample .NET Core application on Linux that multiplies two matrices using the code available <span><a href=\"https://gist.github.com/vkvenkat/f4beadb3fb178a70010002d7753980b2\">here</a></span>. Following is the C# source code snippet of interest:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/sample1.png\" alt=\"\" width=\"617\" height=\"350\" class=\"aligncenter size-full wp-image-19745\" /></p>\n<p>Now let’s refer to the instructions from our earlier <span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/10/23/net-core-performance-profiling-with-intel-vtune-amplifier-2018/\">.NET blog</a></span> to build and run this application using the .NET Core command-line interface (CLI). Next let’s use VTune Amplifier to profile this application using the Launch Application target type and the Hardware Event-Based Sampling mode as detailed in the following picture.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/launch_application.png\" alt=\"\" width=\"1000\" height=\"729\" class=\"aligncenter size-full wp-image-19755\" /></p>\n<p>Here are the hotspots under the Process/Module/Function/Thread/Call Stack grouping:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot2.png\" alt=\"\" width=\"764\" height=\"261\" class=\"aligncenter size-full wp-image-19765\" /></p>\n<p>Now let’s take a look at the source-level hotspots for the Program::Multiply function, which is a major contributor to overall CPU time.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot3.png\" alt=\"\" width=\"961\" height=\"683\" class=\"aligncenter size-full wp-image-19775\" /></p>\n<p>The above figure shows that most of the time is being spent in line 62 which performs matrix arithmetic operations. This source-assembly mapping helps both .NET Core application and compiler developers to identify their source-level hotspots and determine optimization opportunities.</p>\n<p>Now, let’s use the new source code analysis feature to examine the assembly snippets corresponding to the highlighted source line.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot4.png\" alt=\"\" width=\"1008\" height=\"784\" class=\"aligncenter size-full wp-image-19785\" /></p>\n<p>From the above profile, it is clear that reducing the time spent in matrix arithmetic operations would help lower overall application time. One of the possible optimizations here would be to replace the rectangular array data structure used to represent individual matrices with jagged arrays. The C# source code snippet below shows how to do this (complete code is available <span><a href=\"https://gist.github.com/vkvenkat/f35b8ff9552e33c6a11453bcea7d25fa\">here</a></span>).</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/sample2.png\" alt=\"\" width=\"632\" height=\"354\" class=\"aligncenter size-full wp-image-19795\" /></p>\n<p>Here is the updated list of hotspot functions from VTune Amplifier:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot5.png\" alt=\"\" width=\"782\" height=\"243\" class=\"aligncenter size-full wp-image-19805\" /></p>\n<p>We can see that the overall application time has reduced by about 21%<sup>1</sup> (from 16.660 s to 13.175 s).</p>\n<p>The following figure shows the source-assembly mapping for the Program::Multiply function. We see that there is a corresponding reduction in CPU time for the highlighted source line which performs matrix arithmetic operations. Note that the size of the JIT generated code has been reduced too.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot6.png\" alt=\"\" width=\"1002\" height=\"718\" class=\"aligncenter size-full wp-image-19815\" /></p>\n<p>This is a brief description about the feature on Linux. Similar analysis with the matrix multiplication samples above could be done on Windows and we leave that as an exercise for you to try. Now, let’s use a different example to see how source code analysis works on Windows.</p>\n<h1>Profiling .NET Core applications on a local Windows host</h1>\n<p>Let’s create a sample .NET Core application on Windows that reverses an integer array using the code available <span><a href=\"https://gist.github.com/vkvenkat/960b9c4704f8e63066833bb4c6e65db8\">here</a></span>. Following is the C# source code snippet of interest:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/sample3.png\" alt=\"\" width=\"529\" height=\"229\" class=\"aligncenter size-full wp-image-19825\" /></p>\n<p>Now let’s refer to the instructions from our earlier <span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/10/23/net-core-performance-profiling-with-intel-vtune-amplifier-2018/\">.NET blog</a></span> to build and run this application using the .NET Core command-line interface (CLI). Next let’s use VTune Amplifier to profile this application using the Launch Application target type and the Hardware Event-Based Sampling mode as detailed in the following picture. Additionally, we need to provide the source file location on Windows using the Search Sources/Binaries button before profiling.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot7.png\" alt=\"\" width=\"977\" height=\"709\" class=\"aligncenter size-full wp-image-19835\" /></p>\n<p>Here are the hotspots under the Process/Module/Function/Thread/Call Stack grouping:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot8.png\" alt=\"\" width=\"797\" height=\"245\" class=\"aligncenter size-full wp-image-19845\" /></p>\n<p>Now let’s take a look at the source-level hotspots for the Program::IterativeReverse function, which is a major contributor to overall CPU time.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot9.png\" alt=\"\" width=\"908\" height=\"935\" class=\"aligncenter size-full wp-image-19855\" /></p>\n<p>The above figure shows that most of the time is being spent in line 48 which performs array element re-assignment. Now, let’s use the new source code analysis feature to examine the assembly snippets corresponding to the highlighted source line.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot10.png\" alt=\"\" width=\"1093\" height=\"933\" class=\"aligncenter size-full wp-image-19865\" /></p>\n<p>One of the possible optimizations here would be to reverse the integer array by using recursion, rather than iterating over the array contents. The C# source code snippet below shows how to do this (complete code is available <span><a href=\"https://gist.github.com/vkvenkat/02a7541e095b1cc5775f88ce9f69e931\">here</a></span>).</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/sample4.png\" alt=\"\" width=\"592\" height=\"277\" class=\"aligncenter size-full wp-image-19875\" /></p>\n<p>Here is the updated list of hotspot functions from VTune Amplifier:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot11.png\" alt=\"\" width=\"801\" height=\"244\" class=\"aligncenter size-full wp-image-19885\" /></p>\n<p>We can see that the overall application time has reduced by about 42%<sup>2</sup> (from 13.095 s to 7.600 s).</p>\n<p>The following figure shows the source-assembly mapping for the Program::RecursiveReverse function.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot151.png\" alt=\"\" width=\"1056\" height=\"933\" class=\"aligncenter size-full wp-image-19955\" /></p>\n<p>As we can see, the reduction in time is reflected in the source lines above, giving developers a clear picture on how their application performs.</p>\n<h1>Profiling .NET Core applications on a remote Linux target and analyzing the results on a Windows host</h1>\n<p>Sometimes .NET Core developers may need to collect performance data on remote target systems and later finalize the data on a different machine in order to work around resource constraints on the target system or to reduce overhead when finalizing the collected data. VTune Amplifier 2019 has added .NET Core support to collect profiling data from a remote Linux target system and analyze the results on a Windows host system. This section illustrates how to leverage this capability using the matrix multiplication .NET Core application discussed earlier (source code is available <span><a href=\"https://gist.github.com/vkvenkat/f4beadb3fb178a70010002d7753980b2\">here</a></span>).</p>\n<p>First let’s publish the sample application for an x64 target type on either the host or the target with: dotnet publish –c Release –r linux-x64. Then we need to copy the entire folder with sources and binaries to the other machine. Next let’s setup a password-less SSH access to the target with PuTTY, using instructions <span><a href=\"https://software.intel.com/en-us/vtune-amplifier-help-configuring-ssh-access-for-remote-collection\">here</a></span>. We also need to set /proc/sys/kernel/perf_event_paranoid and /proc/sys/kernel/kptr_restrict to 0 in the target system to enable driverless profiling so that user does not need to install target packages, while VTune Amplifier automatically installs the appropriate collectors on the target system.</p>\n<p>echo 0 | sudo tee /proc/sys/kernel/perf_event_paranoid</p>\n<p>echo 0 | sudo tee /proc/sys/kernel/kptr_restrict</p>\n<p>&nbsp;</p>\n<p>Now let’s use VTune Amplifier on the host machine to start remote profiling the application run on the target. First we need to set the profiling target to Remote Linux (SSH) and provide the necessary details to establish an SSH connection with the target. VTune Amplifier automatically installs the appropriate collectors on the target system in the /tmp/vtune_amplifier_&lt;version&gt;.&lt;package_num&gt; directory.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/config.png\" alt=\"\" width=\"350\" height=\"104\" class=\"aligncenter size-full wp-image-19905\" /></p>\n<p>Then let’s select the Launch Application target type and the Hardware Event-Based Sampling modes. Additionally, we need to provide the binary and source file locations on Windows using the Search Sources/Binaries button before profiling.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/config_analysis.png\" alt=\"\" width=\"955\" height=\"876\" class=\"aligncenter size-full wp-image-19915\" /></p>\n<p>Here are the hotspots under the Process/Module/Function/Thread/Call Stack grouping:</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot13.png\" alt=\"\" width=\"789\" height=\"286\" class=\"aligncenter size-full wp-image-19925\" /></p>\n<p>Let’s look at source code analysis in action by selecting one of the hotspot functions.</p>\n<p><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/hotspot14.png\" alt=\"\" width=\"1159\" height=\"732\" class=\"aligncenter size-full wp-image-19935\" /></p>\n<p>The support for remote profiling would enable developers collect low-overhead profiling data on resource-constrained target platforms and then analyze this information on the host.</p>\n<h1><strong>Summary</strong></h1>\n<p>The Source Code Analysis feature can be a useful value addition to the .NET Core community, especially for developers interested in performance optimization as they can get insights into hotspots at the source code and assembly levels and then work on targeted optimizations. We continue to look for additional .NET Core scenarios that could benefit from feature enhancements of VTune Amplifier. Let us know in the comments below if you have any suggestions in mind.</p>\n<h1><strong>References</strong></h1>\n<p>VTune Amplifier Product page: <span><a href=\"https://software.intel.com/en-us/intel-vtune-amplifier-xe\">https://software.intel.com/en-us/intel-vtune-amplifier-xe</a></span></p>\n<p>For more details on using the VTune Amplifier, see the product <span><a href=\"https://software.intel.com/en-us/vtune-amplifier-help\">online help</a></span>.</p>\n<p>For more complete information about compiler optimizations, see our <span><a href=\"https://software.intel.com/en-us/articles/optimization-notice#opt-en\">Optimization Notice</a></span>.</p>\n<p>&nbsp;</p>\n<p>No license (express or implied, by estoppel or otherwise) to any intellectual property rights is granted by this document.</p>\n<p>Intel disclaims all express and implied warranties, including without limitation, the implied warranties of merchantability, fitness for a particular purpose, and non-infringement, as well as any warranty arising from course of performance, course of dealing, or usage in trade.</p>\n<p>This document contains information on products, services and/or processes in development.  All information provided here is subject to change without notice. Contact your Intel representative to obtain the latest forecast, schedule, specifications and roadmaps.</p>\n<p>The products and services described may contain defects or errors known as errata which may cause deviations from published specifications. Current characterized errata are available on request.</p>\n<p>Copies of documents which have an order number and are referenced in this document may be obtained by calling <span>1-800-548-4725</span> or by visiting <span><strong><a href=\"http://www.intel.com/design/literature.htm\">www.intel.com/design/literature.htm</a></strong></span>.</p>\n<p>Intel, the Intel logo, Intel Core, VTune are trademarks of Intel Corporation in the U.S. and/or other countries.</p>\n<p>*Other names and brands may be claimed as the property of others</p>\n<p>© Intel Corporation.</p>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Rich Lander [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"6ddff4fe-8c5a-4787-9569-f5d47760d7f6","CreatedTime":"2018-10-24T05:04:49+08:00","UpdatedTime":"2018-11-06T18:17:23.1543805+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>The organizers of the <span><a href=\"https://fosdem.org/2019/\">FOSDEM 2019</a></span> conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most exciting free software conferences that runs over a weekend and gathers many open source communities, contributors and activists in one place to learn about the state of the world.</p>\n<p>We are looking for:</p>\n<ul>\n<li>Keynote presenters, with bold and vibrant ideas to share with the community at large</li>\n<li>Technical presentations (30 minutes, including questions and discussions) related to .NET, C#, F#, TypeScript</li>\n<li>Presentations about the use of .NET or TypeScript for commercial, academic, hobbyists and other projects</li>\n<li>Tutorials</li>\n<li>Lightning talks (5 minutes each)</li>\n</ul>\n<p>This is a partial list of ideas that might be of interest to the audience, it is by no means comprehensive, so if your project or ideas is not included, feel free to submit a proposal anyways:</p>\n<ul>\n<li>Innovative ideas, fresh new takes on old problems for server applications, client applications.</li>\n<li>Interoperability with other ecosystems</li>\n<li>Best practices, code quality, testing,</li>\n<li>Building software for users</li>\n<li>Compilers, Runtimes, Libraries</li>\n<li>IDEs</li>\n<li>Tips and Tricks</li>\n</ul>\n<h1>Submission</h1>\n<p>To submit a talk proposal, please include:</p>\n<ul>\n<li>Title</li>\n<li>Abstract (at least two paragraphs)\n<ul>\n<li>Describe what your project or presentation is about.</li>\n<li>What the audience will learn from the talk.</li>\n<li>How can people help out with the project, what feedback are you looking for?</li>\n</ul>\n</li>\n<li><strong>Recording me on audio and/or video</strong>\n<ul>\n<li>acceptable under a <span><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC-BY-2.0</a></span> license (<strong>DEFAULT</strong>)</li>\n<li>not acceptable</li>\n</ul>\n</li>\n<li>Brief Bio</li>\n<li>Microblog URL</li>\n<li>Blog URL</li>\n</ul>\n<p>To submit your proposal, please create an account on the FOSDEM site at <span><a href=\"https://penta.fosdem.org/user/new_account\">https://penta.fosdem.org/user/new_account</a></span> and submit your proposal at <a href=\"https://penta.fosdem.org/submission/FOSDEM19\">https://penta.fosdem.org/submission/FOSDEM19</a> and make sure you flag it as being part of the .NET and TypeScript developer room.</p>\n<h2>Deadline</h2>\n<p>The The deadline for receiving submissions is December 3rd, 2018. Speakers will be notified of acceptance or rejection by the 18th of December.</p>\n<p>&nbsp;</p>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Rich Lander [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"d09a8dc0-3641-426a-8865-8381191ce790","CreatedTime":"2018-10-24T04:16:43+08:00","UpdatedTime":"2018-11-06T18:17:23.1543826+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>Today, we are releasing the October 2018 Preview of Quality Rollup.</p>\n<h2><a href=\"#quality-and-reliability\" id=\"user-content-quality-and-reliability\" class=\"anchor\"></a>Quality and Reliability</h2>\n<p>This release contains the following quality and reliability improvements.</p>\n<h3><a href=\"#clr\" id=\"user-content-clr\" class=\"anchor\"></a>CLR</h3>\n<ul>\n<li>Updated Japanese dates that are formatted for the first year in an era and for which the format pattern uses “y年”. The format of the year together with the symbol &#8220;元&#8221; is supported instead of using year number 1. Also, formatting day numbers that include &#8220;元&#8221; is supported. [646179]</li>\n<li>Updated Venezuela currency information, this change affected the culture of “es-VE” in the following ways. [616146]<br />\n1) currency symbol changed to “Bs.S”<br />\n2) English currency name is changed to “Bolívar Soberano”<br />\n3) Native Currency name is changed to “bolívar soberano”<br />\n4) Intl Currency Code changed to “VES”</li>\n<li>Addressed a situation where the System.Security.Cryptography.Algorithms reference was not correctly loaded on .NET Framework 4.7.1 after the 7B/8B patch. [673870]</li>\n</ul>\n<h3><a href=\"#wf\" id=\"user-content-wf\" class=\"anchor\"></a>WF</h3>\n<ul>\n<li>In some .NET Remoting scenarios, when using TransactionScopeAsyncFlowOption.Enabled, it was possible to have Transaction.Current reset to null after a remoting call. [669153]</li>\n</ul>\n<h3>Winforms</h3>\n<ul>\n<li>Addressed an issue where application created numerous Windows Forms textboxes to a flowLayoutPanel, with only a few calls to comctl32.dll. [638365]</li>\n</ul>\n<h3><a href=\"#wpf\" id=\"user-content-wpf\" class=\"anchor\"></a>WPF</h3>\n<ul>\n<li>Addressed a race condition involving temporary files and some anti-virus scanners. This was causing crashes with the message &#8220;The process cannot access the file &#8220;. [638468]</li>\n<li>Addressed a crash due to TaskCanceledException that can occur during shutdown of some WPF apps. Apps that continue to do work involving weak events or data binding after Application.Run() returns are known to be vulnerable to this crash. [655427]</li>\n</ul>\n<p>Note: Additional information on these improvements is not available. The <a href=\"https://www.visualstudio.com/team-services/\" rel=\"nofollow\">VSTS</a> bug number provided with each improvement is a unique ID that you can give <a href=\"https://support.microsoft.com/contactus/\" rel=\"nofollow\">Microsoft Customer Support</a>, include in <a href=\"https://stackoverflow.com/questions/tagged/.net\" rel=\"nofollow\">StackOverflow comments</a> or use in web searches.</p>\n<h2><a href=\"#getting-the-update\" id=\"user-content-getting-the-update\" class=\"anchor\"></a>Getting the Update</h2>\n<p>The Security and Quality Rollup is available via Windows Update, Windows Server Update Services, and Microsoft Update Catalog.</p>\n<h3><a href=\"#microsoft-update-catalog\" id=\"user-content-microsoft-update-catalog\" class=\"anchor\"></a>Microsoft Update Catalog</h3>\n<p>You can get the update via the Microsoft Update Catalog. For Windows 10, .NET Framework updates are part of the Windows 10 Monthly Rollup.</p>\n<p>The following table is for Windows 10 and Windows Server 2016+ versions.</p>\n<table>\n<thead>\n<tr>\n<th>Product Version</th>\n<th>Preview of Quality Rollup KB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Windows 10 1709 (Fall Creators Update)</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462932\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462932\" rel=\"nofollow\">4462932</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4462932\" rel=\"nofollow\">4462932</a></td>\n</tr>\n<tr>\n<td><strong>Windows 10 1703 (Creators Update)</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462939\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462939\" rel=\"nofollow\">4462939</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5, 4.7, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4462939\" rel=\"nofollow\">4462939</a></td>\n</tr>\n<tr>\n<td><strong>Windows 10 1607 (Anniversary Update)<br />\nWindows Server 2016</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462928\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462928\" rel=\"nofollow\">4462928</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5, 4.6.2, 4.7, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4462928\" rel=\"nofollow\">4462928</a></td>\n</tr>\n</tbody>\n</table>\n<p>The following table is for earlier Windows and Windows Server versions.</p>\n<table>\n<thead>\n<tr>\n<th>Product Version</th>\n<th>Preview of Quality Rollup KB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Windows 8.1<br />\nWindows RT 8.1<br />\nWindows Server 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462502\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462502\" rel=\"nofollow\">4462502</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5</td>\n<td><a href=\"https://support.microsoft.com/kb/4459935\" rel=\"nofollow\">4459935</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.5.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459943\" rel=\"nofollow\">4459943</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459941\" rel=\"nofollow\">4459941</a></td>\n</tr>\n<tr>\n<td><strong>Windows Server 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462501\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462501\" rel=\"nofollow\">4462501</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5</td>\n<td><a href=\"https://support.microsoft.com/kb/4459932\" rel=\"nofollow\">4459932</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.5.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459944\" rel=\"nofollow\">4459944</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459940\" rel=\"nofollow\">4459940</a></td>\n</tr>\n<tr>\n<td><strong>Windows 7<br />\nWindows Server 2008 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462500\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462500\" rel=\"nofollow\">4462500</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 3.5.1</td>\n<td><a href=\"https://support.microsoft.com/kb/4459934\" rel=\"nofollow\">4459934</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.5.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459945\" rel=\"nofollow\">4459945</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, 4.7.1, 4.7.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459942\" rel=\"nofollow\">4459942</a></td>\n</tr>\n<tr>\n<td><strong>Windows Server 2008</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4462503\" rel=\"nofollow\">Catalog</a><br />\n<a href=\"https://support.microsoft.com/kb/4462503\" rel=\"nofollow\">4462503</a></strong></td>\n</tr>\n<tr>\n<td>.NET Framework 2.0, 3.0</td>\n<td><a href=\"https://support.microsoft.com/kb/4459933\" rel=\"nofollow\">4459933</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.5.2</td>\n<td><a href=\"https://support.microsoft.com/kb/4459945\" rel=\"nofollow\">4459945</a></td>\n</tr>\n<tr>\n<td>.NET Framework 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4459942\" rel=\"nofollow\">4459942</a></td>\n</tr>\n</tbody>\n</table>\n<h3><a href=\"#previous-monthly-rollups\" id=\"user-content-previous-monthly-rollups\" class=\"anchor\"></a>Previous Monthly Rollups</h3>\n<p>The last few .NET Framework Monthly updates are listed below for your convenience:</p>\n<ul>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-framework-october-2018-security-and-quality-rollup/\" rel=\"nofollow\">October 2018 Security and Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/\" rel=\"nofollow\">September 2018 Preview of Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/\" rel=\"nofollow\">September 2018 Security and Quality Rollup</a></li>\n</ul>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Tara Overfield [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"29c8d4ef-bb58-4eb4-9961-57ca58e46e1c","CreatedTime":"2018-10-19T04:44:34+08:00","UpdatedTime":"2018-11-06T18:17:23.154383+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p><span>Today, we are announcing <a href=\"https://www.microsoft.com/net/download/dotnet-core/2.2\">.NET Core 2.2 Preview 3</a>. </span><span>We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at </span><a href=\"https://github.com/dotnet/core/issues/2004\">dotnet/core #2004</a><span>.</span></p>\n<p><a href=\"https://blogs.msdn.microsoft.com/webdev/2018/10/17/asp-net-core-2-2-0-preview3-now-available/\">ASP.NET Core 2.2 Preview 3</a><span> and </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/\">Entity Framework 2.2 Preview 3</a><span> were also released today.</span></p>\n<p>You can see more details of the release in the<span> </span><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.2/preview/2.2.0-preview3.md\">.NET Core 2.2 Preview 3 release notes</a>. Related instructions, known issues, and workarounds are included in the <a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.2/preview/2.2.0-preview3.md\">releases notes</a>. Please report any issues you find in the comments or at <span> <a href=\"https://github.com/dotnet/core/issues/2004\">dotnet/core #2004</a>.</span></p>\n<p>Please see the <a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/\">.NET Core 2.2 Preview 2</a> post to learn more about the new features coming with .NET Core 2.2.</p>\n<p>Thanks for everyone that contributed to .NET Core 2.2. You’ve helped make .NET Core a better product!</p>\n<h2>Download .NET Core 2.2</h2>\n<p>You can download and get started with .NET Core 2.2, on Windows, macOS, and Linux:</p>\n<ul>\n<li><a href=\"https://www.microsoft.com/net/download/dotnet-core/2.2\" rel=\"nofollow\">.NET Core 2.2 Preview 3 SDK</a><span> </span>(includes the runtime)</li>\n<li><a href=\"https://www.microsoft.com/net/download/dotnet-core/2.2\" rel=\"nofollow\">.NET Core 2.2 Preview 3 Runtime</a></li>\n</ul>\n<p>Docker images are available at<span> </span><a href=\"https://hub.docker.com/r/microsoft/dotnet/\" rel=\"nofollow\">microsoft/dotnet</a><span> </span>for .NET Core and ASP.NET Core.</p>\n<p>.NET Core 2.2 Preview 3 can be used with<span> </span><a href=\"https://visualstudio.microsoft.com/vs/preview/\">Visual Studio 15.9 Preview 3 (or later)</a>, Visual Studio for Mac and Visual Studio Code.</p>\n<h2>Platform Support</h2>\n<p>.NET Core 2.2 is<span> </span><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2-supported-os.md\">supported on the following operating systems</a>:</p>\n<ul>\n<li>Windows Client: 7, 8.1, 10 (1607+)</li>\n<li>Windows Server: 2008 R2 SP1+</li>\n<li>macOS: 10.12+</li>\n<li>RHEL: 6+</li>\n<li>Fedora: 27+</li>\n<li>Ubuntu: 14.04+</li>\n<li>Debian: 8+</li>\n<li>SLES: 12+</li>\n<li>openSUSE: 42.3+</li>\n<li>Alpine: 3.7+</li>\n</ul>\n<p>Chip support follows:</p>\n<ul>\n<li>x64 on Windows, macOS, and Linux</li>\n<li>x86 on Windows</li>\n<li>ARM32 on Linux (Ubuntu 18.04+, Debian 9+)</li>\n</ul>\n<h2>Closing</h2>\n<p>Please download and test<span> </span><a href=\"https://www.microsoft.com/net/download/dotnet-core/2.2\">.NET Core 2.2 Preview 3</a>. We’re looking for feedback on the release with the intent of shipping the final version later this year.</p>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Rich Lander [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"2a79de6a-dadf-49fc-8cec-e8bf9ee00d5d","CreatedTime":"2018-10-18T09:03:01+08:00","UpdatedTime":"2018-11-06T18:17:23.1543838+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>We can all agree that tracking the progress of a project enhances productivity and is an effective way to keep everyone involved of its progress. When it comes to managing your project in Azure DevOps (formerly VSTS) or GitHub, you have all of your artifacts in one place: code, CI/CD pipelines, releases, work items, and more. In cases where there’s a larger project with a larger team, the rate at which pull requests and work items are created, opened, and closed will increase significantly between each release. Imagine a large user base that wanted to stay updated on these changes and updates through release notes. They’ll want to know if that pesky bug that was introduced in the last version got fixed this time, or if that feature they’re excited about finally made it out of beta.</p>\n<p>Release notes tend to map directly to items that a team is tracking internally; I’d expect a work item on a bug high severity to make it into the release documentation. However, putting together release notes can be quite a challenge and very time consuming. When it’s time to ship new software updates, someone must manually go back in time to the last release, gather the relevant information, and compile it into a document to share with users. How do we keep the release information current and accurate for end users?</p>\n<p>It’d be nice to automate the process of extracting information from completed work items and merged pull requests to create a document that outlines changes in a new release. This was the inspiration of the Release Notes Generator. With Azure Functions and Azure Blob Storage, the generator creates a markdown file every time a new release is created in Azure DevOps. In this post, we’ll walk through how the generator works, and use a sample DevOps project as an example for the generator. If you’d like a GitHub version, see the <span><a href=\"https://open.microsoft.com/2018/09/06/how-to-automate-software-release-notes/?WT.mc_id=dotnet-blog-jasmineg\">GitHub release notes generator sister post</a></span>.</p>\n<p>&nbsp;</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2018/10/adoworkitems.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/adoworkitems-e1539638432651.png\" alt=\"\" class=\"aligncenter wp-image-19615 size-full\" width=\"800\" height=\"379\" /></a></p>\n<p style=\"text-align: center\"><em>Overview of an Azure DevOps Project’s Work Items</em></p>\n<p>&nbsp;</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2018/10/renderedmkd.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/renderedmkd-e1539638493118.png\" alt=\"\" class=\"aligncenter wp-image-19605 size-full\" width=\"800\" height=\"377\" /></a></p>\n<p style=\"text-align: center\"><em>View of Rendered Markdown version of release notes in VS Code with <a href=\"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\">Markdown All in One Extension</a></em></p>\n<p>&nbsp;</p>\n<p>The generator is an Azure Function app; Functions allow you to only pay for the time your code is running, so I’m only paying for the time it takes my code that generates notes to execute. With an HTTP triggered function, a webhook is configured in Azure DevOps to send an HTTP request to the function to kick off the notes generation process. Webhook configuration simply requires you to copy the url of the function that you’d like to send the endpoint to. An added benefit of using Azure Functions is that you can get started locally on your machine using <span><a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-develop-vs?WT.mc_id=dotnet-blog-jasmineg\"></a></span> or the <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local?WT.mc_id=dotnet-blog-jasmineg\"> </a>. You can create, debug, test, and deploy your function app all from the comfort of your own computer without even needing an Azure Subscription. You can test HTTP triggered functions locally with a tool like <span><a href=\"https://ngrok.com/\">ngrok</a></span>.</p>\n<p>&nbsp;</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2018/10/localdevfunctions.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/localdevfunctions-e1539638550541.png\" alt=\"\" class=\"aligncenter wp-image-19625 size-full\" width=\"800\" height=\"518\" /></a></p>\n<p style=\"text-align: center\"><em>Local development of HTTP triggered function in Visual Studio</em></p>\n<p>Out of all of Azure’s storage account offerings, blob storage is suited for serving and storing unstructured data objects like textual files, including the markdown representation of the release notes. The blob storage structure is similar to common file systems where objects, named blobs, are organized and stored in containers. This way, the release notes have a dedicated location inside a “releases” container. You can manage a storage account on your computer with the Azure Storage Explorer.</p>\n<p>&nbsp;</p>\n<p style=\"text-align: center\"><em><a href=\"https://msdnshared.blob.core.windows.net/media/2018/10/storagexplorerblob1.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2018/10/storagexplorerblob1-1024x488.png\" alt=\"\" class=\"alignnone wp-image-19645 size-large\" width=\"879\" height=\"419\" /></a></em></p>\n<p style=\"text-align: center\"><em>Release notes blobs in the releases container in Azure Storage Explorer</em></p>\n<p>The release function uses the Azure Storage API to create a file and append text and links to a file. Interacting with blobs and blob containers through the API requires minimal setup; you just need the associated storage account connection string to get started.</p>\n<p style=\"text-align: center\">\n<script src=\"https://gist.github.com/paladique/747851e3105da2ea9ba38ebbe85f62fd.js\"></script>\n<p><em>Creating a new release file with Azure Storage API</em></p>\n<p>Azure Functions are a quick and straightforward way to enhance your workflows with Azure DevOps webhooks. The<a href=\"https://github.com/Azure-Samples/azure-devops-release-notes\"> release notes generator sample code</a> is a good start if you’re interested in exploring the serverless possibilities that work for you. The sample includes instructions on how to run it in Visual Studio. Once you’ve got your own generator up and running, be sure to visit the docs and samples to see what else you can do.</p>\n<h2>Resources</h2>\n<p><a href=\"https://github.com/Azure-Samples/azure-devops-release-notes\">Sample Code on GitHub</a></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/devops-project/overview?WT.mc_id=dotnet-blog-jasmineg\">Overview of Azure DevOps Project</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview?WT.mc_id=dotnet-blog-jasmineg\">Azure Functions Documentation</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-develop-vs?WT.mc_id=dotnet-blog-jasmineg\">Develop Azure Functions using Visual Studio</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-develop-local?WT.mc_id=dotnet-blog-jasmineg\">Code and test Azure Functions Locally</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/devops/service-hooks/services/webhooks?WT.mc_id=dotnet-blog-jasmineg\">WebHooks with Azure DevOps Services</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-dotnet?WT.mc_id=dotnet-blog-jasmineg\">Quickstart: Use .NET to create a blob in object storage</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?WT.mc_id=dotnet-blog-jasmineg\">Get started with Storage Explorer</a></span></p>\n<p><span><a href=\"https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/index?WT.mc_id=dotnet-blog-jasmineg\">Microsoft Learn Learning Path: Create Serverless Applications</a></span></p>\n<p><span><a href=\"https://open.microsoft.com/2018/09/06/how-to-automate-software-release-notes/?WT.mc_id=dotnet-blog-jasmineg\">GitHub Version sister post</a></span></p>\n","Link":"https://blogs.msdn.microsoft.com/dotnet/2018/10/16/automating-release-notes-with-azure-functions/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Jasmine Greenaway [MSFT]","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"","Summary":null,"Id":"ede8a5bc-f0e8-40b0-b91b-392f431c25b0","CreatedTime":"2018-10-16T23:00:44+08:00","UpdatedTime":"2018-11-06T18:17:23.1543845+08:00","Status":0},{"TitleEn":null,"ContentEn":"<h3><b>Bing election coverage</b></h3>\n\n<p><br>\nWith the midterm election just over a week away, we want to make it easy to find the information you are looking for about state by state voting details, election news, candidates and initiatives on the ballot.&nbsp;</p>\n\n<p>We know how difficult it can be to make well-educated decisions in a world that&rsquo;s full of, at times, conflicting information. With Bing&rsquo;s multi-perspective answer, we hope to help voters understand the full range of arguments for or against a key ballot initiative by clearly presenting and summarizing the main arguments on each side.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>In addition, Bing provides information on US Senate and House races, gubernatorial contests, as well as state House and Senate races in every state. In addition, there are <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.bing.com%2Fsearch%3Fq%3DDeb%2520Fischer%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26pq%3Ddeb%2520fischer%26sc%3D9-11%26sk%3D%26cvid%3D8EE578DEC2F446449B874AE12C68CA07&amp;data=02%7C01%7Cfrbassa%40microsoft.com%7C60bdde29d6474188be2e08d63a2555ab%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636760329357117834&amp;sdata=s7ZyS95l4hKKNyhXSjpgiVIZ3FTPV6Djcw%2BsVaPYH6U%3D&amp;reserved=0\">detailed profiles</a> of US Senate candidates and <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.bing.com%2Fsearch%3Fq%3Dmitt%2Bromney%26filters%3Dufn%253a%2522mitt%2Bromney%2522%2Bsid%253a%2522ddf9c7e5-d393-284b-6920-284421d25982%2522%26qs%3DMB%26pq%3Dmitt%2Bromney%26sc%3D8-11%26cvid%3D35CD24274EEE4CC1A219DE5E682B309E%26FORM%3DQBRE%26sp%3D1%26ghc%3D1&amp;data=02%7C01%7Cfrbassa%40microsoft.com%7C60bdde29d6474188be2e08d63a2555ab%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636760329357127834&amp;sdata=7mohaWahStoRHgKfrptjXKlQkbBdUAMcvHjJ15iWyUg%3D&amp;reserved=0\">their positions on various key issues</a>. Our goal is to help you become as informed as possible as you fill out your ballots, while providing you with practical information such as absentee ballot application, locating polling locations, and ID requirements. On Nov. 6, Bing will feature live results from the Associated Press to keep you up to date with all of the latest election developments.</p>\n\n<p>&nbsp;</p>\n\n<p>As always, any news about the election can be found in the Trending section of your Bing homepage, as well as on the &lsquo;2018 Elections&rsquo; tab of the <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.bing.com%2Fnews%2Fsearch%3Fq%3Dmidterm%2Belections&amp;data=02%7C01%7Cfrbassa%40microsoft.com%7Cd7152efaf5a94777f2b508d6296c8504%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636741943412649457&amp;sdata=SQuq5Ss%2By90lMPfjrx254ti7fe73EOmoSafEhTKyNgA%3D&amp;reserved=0\">Bing News vertical</a>. You can also check out our constantly updating news&nbsp;<a href=\"https://www.bing.com/search?q=midterm%20elections\">Spotlight</a>,&nbsp;capturing the biggest news stories of the day.</p>\n\n<p>&nbsp;</p>\n\n<h3><b>A new way to view and browse images</b></h3>\n\n<p>&nbsp;</p>\n\n<p>We&rsquo;ve updated the UX of the image detail page on Bing desktop to more easily highlight new and relevant information about images you click on. For example, if you&rsquo;re searching for images of food, Bing will automatically find recipes associated with that image, presenting the information in the upper right-hand corner of the screen. Looking for outfits or costumes? Bing will help you find related product pages where you can purchase the item you are looking for. The intention behind these changes it to make it easier than ever to find relevant information and inspiration for your image-based searches.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>We&rsquo;ve also extended these UX changes to our new visual search results page, where you can search using an image as an input. Whether you&rsquo;ve uploaded an image yourself or are browsing the web, Bing&rsquo;s object detection features can help you more easily zoom in on particular parts of the image which you might want to search, learn more about, or buy.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<h3><b>NFL expanded&nbsp;</b></h3>\n\n<p>&nbsp;</p>\n\n<p>With the NFL season in full swing, we&rsquo;ve come up with even more ways for football fans to stay on top of their game. No matter what information you&rsquo;re looking for, Bing presents a comprehensive picture of each game with stats, schedules, viewing information, injury reports, news, and even predictions.</p>\n\n<p>&nbsp;</p>\n\n<p>Additionally, Bing&rsquo;s pre-game insights provide specialized notes that guide both new and experienced football fans on the history of the teams and the matchup, as well as what to watch for in the current showdown.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<h3><b>Word of the day</b></h3>\n\n<p>&nbsp;</p>\n\n<p>Finally, as we&rsquo;re approaching the new year&mdash;we want to give everyone a fun and easy opportunity to expand their vocabulary. Bing&rsquo;s new word of the day is simple way to expose yourself to new words and concepts. Learn the featured word&rsquo;s meaning, pronunciation, and see the word in context. You can also navigate through the words for the past week to catch up on words you may have missed.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Tomorrow&rsquo;s word? That&rsquo;s a surprise!&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<h3><b>We value your feedback</b></h3>\n\n<p>As always, we value your perspective, and one of the best ways for you to provide it is via the Bing Insider Program, which gives our users the opportunity to provide feedback to Bing engineers and partner teams via monthly calls, Insider events, interactive feedback sessions, and more.<br><br>\nPlease register <a href=\"https://www.bing.com/insider?form=MK12G6&amp;OCID=MK12G6\">here</a> to become a <b>Bing Insider</b>. Even if you don&rsquo;t join today, the website is full of great content featuring our Insiders as well as new Bing features. We hope you enjoy the new site and come back often.</p>\n\n<p>&nbsp;</p>","Link":"https://blogs.bing.com/search/november-2018/This-month-on-Bing-election-info,-image-UI-refresh,-NFL-answers,-and-word-of-the-day","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"Bing Team","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"Bing blogs","Summary":null,"Id":"b4bdd1ae-288e-461f-b06e-6c46e6340be7","CreatedTime":"2018-11-02T12:31:45+08:00","UpdatedTime":"2018-11-06T18:17:23.1543851+08:00","Status":0},{"TitleEn":null,"ContentEn":"<p>To help you stay up to date on online training opportunities, were releasing a monthly list of the latest free Data and Artificial Intelligence (AI) sessions in one convenient post.</p>\n<h2>SQL Server 2019</h2>\n<p><a href=\"https://www.microsoft.com/en-us/sql-server/sql-server-2019\">SQL Server 2019</a> brings innovative security and compliance features, industry-leading performance, mission-critical availability, and advanced analytics to all your data workloads, now with support for big data built-in.<a name=\"_Hlk527722556\"></a></p>\n<h3><a href=\"https://info.microsoft.com/ww-ondemand-intro-sql-server-2019.html\">Introduction to SQL Server 2019</a></h3>\n<p>More than 12,000 of you signed up for this unveiling of Microsoft SQL Server 2019, now in public preview. See what all the buzz is about in <a href=\"https://info.microsoft.com/ww-ondemand-intro-sql-server-2019.html\">the on-demand guided tour</a>. Easily integrate data from multiple sources, including Oracle, MongoDB, and Teradata, without moving your data via ETL. Learn how enhanced security, performance, scalability, and availability of the SQL Server database engine helps you manage critical applications and data warehouses.</p>\n<h2>Azure SQL Database Managed Instance</h2>\n<p>Azure SQL Database is a fully managed relational database-as-a-service, which means you wont need to manage virtual machines, worry about scalability or availability, or deal with database and security upgrades.</p>\n<h3><a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Finfo.microsoft.com%2Fww-ondemand-optimize-your-sql-apps-with-azure-sql-db.html&amp;data=02%7C01%7Cjoawong%40microsoft.com%7C06dc72734be945d4010308d635ed358b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636755690267803007&amp;sdata=t2THAI4ERnaLHE4mzfNVFVBQ3TGOV3okfwukj%2BTmlBM%3D&amp;reserved=0\">Optimize Your SQL Apps with Azure SQL Database</a></h3>\n<p>Learn how Azure SQL Database Managed Instance, the latest deployment option, allows you to seamlessly lift-and-shift your on-premises SQL Server applications to the cloud without rewriting them.<a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Finfo.microsoft.com%2Fww-ondemand-optimize-your-sql-apps-with-azure-sql-db.html&amp;data=02%7C01%7Cjoawong%40microsoft.com%7C06dc72734be945d4010308d635ed358b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636755690267813015&amp;sdata=UQ5KeaZD8Yw%2BsZuoTb4PwLQcBKbs2FlcgaQISbBRVNw%3D&amp;reserved=0\">Watch this session on demand</a> to learn how to optimize IT operations by moving your on-premises apps to the cloud.</p>\n<h2>Intelligence (AI)</h2>\n<p>Infuse your apps, websites, and bots with intelligent algorithms to see, hear, speak, understand, and interpret your user needs through natural methods of communication. The <a href=\"https://azure.microsoft.com/en-us/overview/ai-platform/\">Microsoft AI platform</a> offers a comprehensive set of flexible <a href=\"https://azure.microsoft.com/en-us/overview/ai-platform/#services\">AI services</a> for any scenario and enterprise-grade <a href=\"https://azure.microsoft.com/en-us/overview/ai-platform/#infrastructure\">AI infrastructure</a> that runs AI workloads anywhere at scale.</p>\n<h3><a href=\"https://info.microsoft.com/ww-OnDemandRegistration-AI-Build-and-Manage-Enterprise-Bots.html\">Build and Manage Enterprise Bots</a></h3>\n<p>Learn how to easily integrate AI into your apps, accelerate your time to market, and deliver superior insights and user experiences. <a href=\"https://info.microsoft.com/ww-OnDemandRegistration-AI-Build-and-Manage-Enterprise-Bots.html\">Watch now</a> to learn about the strategies that Microsoft has used to build dozens of conversational bots for the largest enterprises in the world.</p>\n<h3><a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Finfo.microsoft.com%2Fww-create-your-first-intelligent-bot-with-azure-AI.html&amp;data=02%7C01%7Ctmac%40microsoft.com%7C70df9266342c4f07575608d635e5ba8b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636755658131834257&amp;sdata=7t2jk4fuMid511rRBE%2FhGPinoGQztk9K0gSNalIRkRU%3D&amp;reserved=0\">Create Your First Intelligent Bot with Azure AI</a></h3>\n<p>Artificial intelligence is accelerating digital transformation across every industry. <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Finfo.microsoft.com%2Fww-create-your-first-intelligent-bot-with-azure-AI.html&amp;data=02%7C01%7Ctmac%40microsoft.com%7C70df9266342c4f07575608d635e5ba8b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636755658131834257&amp;sdata=7t2jk4fuMid511rRBE%2FhGPinoGQztk9K0gSNalIRkRU%3D&amp;reserved=0\">Join this session</a> with AI experts to learn how to use AI to augment human ingenuity and create the next generation of intelligent applications. We will dive into the tools, infrastructure, and services available as part of the Microsoft Azure AI platform and show you how to teach your bot to use prebuilt AI capabilities in computer vision, speech, and translation. Ready for more? Get our free <a href=\"https://info.microsoft.com/ww-landing-ai-developers-bot-ebook.html\">developers guide to building AI apps</a>.</p>\n<h2>Big Data and Analytics</h2>\n<p>Deliver better experiences and make better decisions by analyzing massive amounts of data in real time. Get the insight you need to deliver intelligent actions that improve customer engagement, increase revenue, and lower costs.</p>\n<h3><a href=\"https://info.microsoft.com/ww-ondemand-registration-SimplifyDataAccess-webinar.html\">Simplify Access to Real-Time Data</a></h3>\n<p><a href=\"https://info.microsoft.com/ww-ondemand-registration-SimplifyDataAccess-webinar.html\">Watch this session</a> to learn how to optimize your extract, transform, and load (ETL) process and streaming pipelines with Delta, a new feature of Azure Databricks. In addition, we will cover how to simplify your data management system to bring data reliability and performance optimizations to cloud data lakes and how to incorporate new streaming data in seconds.</p>\n<h3><a href=\"https://info.microsoft.com/WW-Registration-The-Total-Economic-Impact-of-the-Modern-Data-Warehouse.html\">The Total Economic Impact<img src=\"https://s.w.org/images/core/emoji/11/72x72/2122.png\" alt=\"\"> of the Modern Data Warehouse</a></h3>\n<p><a href=\"https://info.microsoft.com/WW-Registration-The-Total-Economic-Impact-of-the-Modern-Data-Warehouse.html\">Join us at this upcoming session</a> to learn about the advantages of using Microsoft Azure SQL Data Warehouse. Youll get important information from our guest, Forrester Consulting, based on the findings of a commissioned study, on the challenges and opportunities companies face and the financial results theyve achieved by using this solution.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://cloudblogs.microsoft.com/sqlserver/2018/10/30/data-and-ai-services-training-roundup-october-2018/\">Data and AI Services training roundup October 2018</a> appeared first on <a rel=\"nofollow\" href=\"https://cloudblogs.microsoft.com/sqlserver\">SQL Server Blog</a>.</p>","Link":"https://cloudblogs.microsoft.com/sqlserver/2018/10/30/data-and-ai-services-training-roundup-october-2018/","Categories":"BlogRss","IsPublishMP":false,"Thumbnail":"","Title":null,"AuthorName":"SQL Server Team","Author":null,"Comments":null,"ViewNunmber":0,"Content":null,"Keywords":"SQL Server Blog","Summary":null,"Id":"0ec4b256-3228-4934-b43c-056ef990b5e1","CreatedTime":"2018-10-31T00:00:11+08:00","UpdatedTime":"2018-11-06T18:17:23.1543855+08:00","Status":0}]